apiVersion: v1
data:
  aap-openapi.yaml: |
    openapi: 3.0.3
    info:
      title: The AAP Rest Api
      version: v2
    servers:
      - url: https://your-app-platform.io/
    paths:
      /api/controller/v2/job_templates/{job_template_id}/launch/:
        post:
          description: Launch a job from a template id
          operationId: launchJob
          parameters:
            - name: job_template_id
              in: path
              required: true
              schema:
                type: integer
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/LaunchJobRequest"
          responses:
            "201":
              description: Created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/LaunchJobResponse"
            "401":
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UnauthorizedError"
          security:
            - basicAuth: []
      /api/controller/v2/jobs/{job_id}/:
        get:
          description: Retrieve a job from a job id
          operationId: getJob
          parameters:
            - name: job_id
              in: path
              required: true
              schema:
                type: integer
          responses:
            "200":
              description: Success
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/GetJobResponse"
            "401":
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UnauthorizedError"
          security:
            - basicAuth: []
    components:
      schemas:
        LaunchJobRequest:
          type: object
          properties:
            limit:
              type: string
            extra_vars:
              type: object
              properties:
                rhel_inventory_group:
                  type: string
                targetNamespace:
                  type: string
          additionalProperties: false
        LaunchJobResponse:
          type: object
          properties:
            id:
              type: integer
            failed:
              type: boolean
            status:
              type: string
          additionalProperties: false
        GetJobResponse:
          type: object
          properties:
            id:
              type: integer
            failed:
              type: boolean
            status:
              type: string
          additionalProperties: false
        UnauthorizedError:
          type: object
          properties:
            detail:
              type: string
      securitySchemes:
        basicAuth:
          type: http
          scheme: basic
  argocd-openapi.yaml: |
    openapi: 3.0.0
    info:
      title: Kubernetes
      version: v1.27.11+ec42b99
    servers:
      - url: /
    security:
      - BearerToken: []
    paths:
      /apis/argoproj.io/v1alpha1/namespaces/{namespace}/applications:
        post:
          description: create an Application
          tags:
            - argoprojIo_v1alpha1
          operationId: createArgoprojIoV1alpha1NamespacedApplication
          parameters:
            - name: namespace
              in: path
              description: namespace
              required: true
              schema:
                type: string
            - name: dryRun
              in: query
              description: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
              schema:
                type: string
            - name: fieldManager
              in: query
              description: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
              schema:
                type: string
            - name: fieldValidation
              in: query
              description: "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered."
              schema:
                type: string
          requestBody:
            content:
              "*/*":
                schema:
                  $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            required: true
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            "201":
              description: Created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
                application/yaml:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
                application/vnd.kubernetes.protobuf:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            "202":
              description: Accepted
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
                application/yaml:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
                application/vnd.kubernetes.protobuf:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            "401":
              description: Unauthorized
              content: {}
          x-kubernetes-action: post
          x-kubernetes-group-version-kind:
            group: argoproj.io
            kind: Application
            version: v1alpha1
      /apis/argoproj.io/v1alpha1/namespaces/{namespace}/applications/{name}:
        get:
          description: read the specified Application
          tags:
            - argoprojIo_v1alpha1
          operationId: readArgoprojIoV1alpha1NamespacedApplication
          parameters:
            - name: namespace
              in: path
              description: namespace
              required: true
              schema:
                type: string
            - name: name
              in: path
              description: name
              required: true
              schema:
                type: string
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
                application/yaml:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
                application/vnd.kubernetes.protobuf:
                  schema:
                    $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            "401":
              description: Unauthorized
              content: {}
          x-kubernetes-action: get
          x-kubernetes-group-version-kind:
            group: argoproj.io
            kind: Application
            version: v1alpha1
    components:
      schemas:
        io.argoproj.v1alpha1.Application:
          description: Application is a definition of Application resource.
          type: object
          required:
            - metadata
            - spec
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            operation:
              description: Operation contains information about a requested or running operation
              type: object
              properties:
                info:
                  description: Info is a list of informational items for this operation
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                initiatedBy:
                  description: InitiatedBy contains information about who initiated the operations
                  type: object
                  properties:
                    automated:
                      description: Automated is set to true if operation was initiated automatically by the application controller.
                      type: boolean
                    username:
                      description: Username contains the name of a user who started operation
                      type: string
                retry:
                  description: Retry controls the strategy to apply if a sync fails
                  type: object
                  properties:
                    backoff:
                      description: Backoff controls how to backoff on subsequent retries of failed syncs
                      type: object
                      properties:
                        duration:
                          description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                          type: string
                        factor:
                          description: Factor is a factor to multiply the base duration after each failed retry
                          type: integer
                          format: int64
                        maxDuration:
                          description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                          type: string
                    limit:
                      description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                      type: integer
                      format: int64
                sync:
                  description: Sync contains parameters for the operation
                  type: object
                  properties:
                    dryRun:
                      description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                      type: boolean
                    manifests:
                      description: Manifests is an optional field that overrides sync source with a local directory for development
                      type: array
                      items:
                        type: string
                    prune:
                      description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                      type: boolean
                    resources:
                      description: Resources describes which resources shall be part of the sync
                      type: array
                      items:
                        description: SyncOperationResource contains resources to sync.
                        type: object
                        required:
                          - kind
                          - name
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                    revision:
                      description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                      type: string
                    revisions:
                      description: Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
                      type: array
                      items:
                        type: string
                    source:
                      description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                      type: object
                      required:
                        - repoURL
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          type: object
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              type: object
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External Variables
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                libs:
                                  description: Additional library search dirs
                                  type: array
                                  items:
                                    type: string
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level Arguments
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                            recurse:
                              description: Recurse specifies whether to scan a directory recursively for manifests
                              type: boolean
                        helm:
                          description: Helm holds helm specific options
                          type: object
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the helm template
                              type: array
                              items:
                                description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing the values for the Helm parameter
                                    type: string
                            ignoreMissingValueFiles:
                              description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                              type: boolean
                            parameters:
                              description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                              type: array
                              items:
                                description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  forceString:
                                    description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                            passCredentials:
                              description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                              type: boolean
                            releaseName:
                              description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                              type: string
                            skipCrds:
                              description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                              type: boolean
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files to use when generating a template
                              type: array
                              items:
                                type: string
                            values:
                              description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                              type: string
                            valuesObject:
                              description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                              x-kubernetes-preserve-unknown-fields: true
                            version:
                              description: Version is the Helm version to use for templating ("3")
                              type: string
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          type: object
                          properties:
                            commonAnnotations:
                              description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            commonAnnotationsEnvsubst:
                              description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                              type: boolean
                            commonLabels:
                              description: CommonLabels is a list of additional labels to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            components:
                              description: Components specifies a list of kustomize components to add to the kustomization before building
                              type: array
                              items:
                                type: string
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override specifications
                              type: array
                              items:
                                description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                            labelWithoutSelector:
                              description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                              type: boolean
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources for Kustomize apps
                              type: string
                            namespace:
                              description: Namespace sets the namespace that Kustomize adds to all resources
                              type: string
                            patches:
                              description: Patches is a list of Kustomize patches
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: object
                                    additionalProperties:
                                      type: boolean
                                  patch:
                                    type: string
                                  path:
                                    type: string
                                  target:
                                    type: object
                                    properties:
                                      annotationSelector:
                                        type: string
                                      group:
                                        type: string
                                      kind:
                                        type: string
                                      labelSelector:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      version:
                                        type: string
                            replicas:
                              description: Replicas is a list of Kustomize Replicas override specifications
                              type: array
                              items:
                                type: object
                                required:
                                  - count
                                  - name
                                properties:
                                  count:
                                    description: Number of replicas
                                    x-kubernetes-int-or-string: true
                                  name:
                                    description: Name of Deployment or StatefulSet
                                    type: string
                            version:
                              description: Version controls which version of Kustomize to use for rendering manifests
                              type: string
                        path:
                          description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: Plugin holds config management plugin specific options
                          type: object
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              type: array
                              items:
                                description: EnvEntry represents an entry in the application's environment
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name is the name of the variable, usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                            name:
                              type: string
                            parameters:
                              type: array
                              items:
                                type: object
                                properties:
                                  array:
                                    description: Array is the value of an array type parameter.
                                    type: array
                                    items:
                                      type: string
                                  map:
                                    description: Map is the value of a map type parameter.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  name:
                                    description: Name is the name identifying a parameter.
                                    type: string
                                  string:
                                    description: String_ is the value of a string type parameter.
                                    type: string
                        ref:
                          description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                          type: string
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                          type: string
                    sources:
                      description: Sources overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                      type: array
                      items:
                        description: ApplicationSource contains all required information about the source of an application
                        type: object
                        required:
                          - repoURL
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            type: object
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                type: object
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  libs:
                                    description: Additional library search dirs
                                    type: array
                                    items:
                                      type: string
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                          helm:
                            description: Helm holds helm specific options
                            type: object
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                type: array
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                type: array
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                              passCredentials:
                                description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                type: array
                                items:
                                  type: string
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                type: string
                              valuesObject:
                                description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the Helm version to use for templating ("3")
                                type: string
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            type: object
                            properties:
                              commonAnnotations:
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              commonAnnotationsEnvsubst:
                                description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                type: boolean
                              commonLabels:
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              components:
                                description: Components specifies a list of kustomize components to add to the kustomization before building
                                type: array
                                items:
                                  type: string
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                type: array
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                              labelWithoutSelector:
                                description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                type: boolean
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              namespace:
                                description: Namespace sets the namespace that Kustomize adds to all resources
                                type: string
                              patches:
                                description: Patches is a list of Kustomize patches
                                type: array
                                items:
                                  type: object
                                  properties:
                                    options:
                                      type: object
                                      additionalProperties:
                                        type: boolean
                                    patch:
                                      type: string
                                    path:
                                      type: string
                                    target:
                                      type: object
                                      properties:
                                        annotationSelector:
                                          type: string
                                        group:
                                          type: string
                                        kind:
                                          type: string
                                        labelSelector:
                                          type: string
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        version:
                                          type: string
                              replicas:
                                description: Replicas is a list of Kustomize Replicas override specifications
                                type: array
                                items:
                                  type: object
                                  required:
                                    - count
                                    - name
                                  properties:
                                    count:
                                      description: Number of replicas
                                      x-kubernetes-int-or-string: true
                                    name:
                                      description: Name of Deployment or StatefulSet
                                      type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: Plugin holds config management plugin specific options
                            type: object
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                type: array
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                              name:
                                type: string
                              parameters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    array:
                                      description: Array is the value of an array type parameter.
                                      type: array
                                      items:
                                        type: string
                                    map:
                                      description: Map is the value of a map type parameter.
                                      type: object
                                      additionalProperties:
                                        type: string
                                    name:
                                      description: Name is the name identifying a parameter.
                                      type: string
                                    string:
                                      description: String_ is the value of a string type parameter.
                                      type: string
                          ref:
                            description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                    syncOptions:
                      description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                      type: array
                      items:
                        type: string
                    syncStrategy:
                      description: SyncStrategy describes how to perform the sync
                      type: object
                      properties:
                        apply:
                          description: Apply will perform a `kubectl apply` to perform the sync.
                          type: object
                          properties:
                            force:
                              description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                              type: boolean
                        hook:
                          description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                          type: object
                          properties:
                            force:
                              description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                              type: boolean
            spec:
              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
              type: object
              required:
                - destination
                - project
              properties:
                destination:
                  description: Destination is a reference to the target Kubernetes server and namespace
                  type: object
                  properties:
                    name:
                      description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                      type: string
                    namespace:
                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                      type: string
                    server:
                      description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                      type: string
                ignoreDifferences:
                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                  type: array
                  items:
                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                    type: object
                    required:
                      - kind
                    properties:
                      group:
                        type: string
                      jqPathExpressions:
                        type: array
                        items:
                          type: string
                      jsonPointers:
                        type: array
                        items:
                          type: string
                      kind:
                        type: string
                      managedFieldsManagers:
                        description: ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
                        type: array
                        items:
                          type: string
                      name:
                        type: string
                      namespace:
                        type: string
                info:
                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                project:
                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                  type: string
                revisionHistoryLimit:
                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                  type: integer
                  format: int64
                source:
                  description: Source is a reference to the location of the application's manifests or chart
                  type: object
                  required:
                    - repoURL
                  properties:
                    chart:
                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                      type: string
                    directory:
                      description: Directory holds path/directory specific options
                      type: object
                      properties:
                        exclude:
                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                          type: string
                        include:
                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                          type: string
                        jsonnet:
                          description: Jsonnet holds options specific to Jsonnet
                          type: object
                          properties:
                            extVars:
                              description: ExtVars is a list of Jsonnet External Variables
                              type: array
                              items:
                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                            libs:
                              description: Additional library search dirs
                              type: array
                              items:
                                type: string
                            tlas:
                              description: TLAS is a list of Jsonnet Top-level Arguments
                              type: array
                              items:
                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                        recurse:
                          description: Recurse specifies whether to scan a directory recursively for manifests
                          type: boolean
                    helm:
                      description: Helm holds helm specific options
                      type: object
                      properties:
                        fileParameters:
                          description: FileParameters are file parameters to the helm template
                          type: array
                          items:
                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                            type: object
                            properties:
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              path:
                                description: Path is the path to the file containing the values for the Helm parameter
                                type: string
                        ignoreMissingValueFiles:
                          description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                          type: boolean
                        parameters:
                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                          type: array
                          items:
                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                            type: object
                            properties:
                              forceString:
                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                type: boolean
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              value:
                                description: Value is the value for the Helm parameter
                                type: string
                        passCredentials:
                          description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                          type: boolean
                        releaseName:
                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                          type: string
                        skipCrds:
                          description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                          type: boolean
                        valueFiles:
                          description: ValuesFiles is a list of Helm value files to use when generating a template
                          type: array
                          items:
                            type: string
                        values:
                          description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                          type: string
                        valuesObject:
                          description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                          x-kubernetes-preserve-unknown-fields: true
                        version:
                          description: Version is the Helm version to use for templating ("3")
                          type: string
                    kustomize:
                      description: Kustomize holds kustomize specific options
                      type: object
                      properties:
                        commonAnnotations:
                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                          type: object
                          additionalProperties:
                            type: string
                        commonAnnotationsEnvsubst:
                          description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                          type: boolean
                        commonLabels:
                          description: CommonLabels is a list of additional labels to add to rendered manifests
                          type: object
                          additionalProperties:
                            type: string
                        components:
                          description: Components specifies a list of kustomize components to add to the kustomization before building
                          type: array
                          items:
                            type: string
                        forceCommonAnnotations:
                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                          type: boolean
                        forceCommonLabels:
                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                          type: boolean
                        images:
                          description: Images is a list of Kustomize image override specifications
                          type: array
                          items:
                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                            type: string
                        labelWithoutSelector:
                          description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                          type: boolean
                        namePrefix:
                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                          type: string
                        nameSuffix:
                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                          type: string
                        namespace:
                          description: Namespace sets the namespace that Kustomize adds to all resources
                          type: string
                        patches:
                          description: Patches is a list of Kustomize patches
                          type: array
                          items:
                            type: object
                            properties:
                              options:
                                type: object
                                additionalProperties:
                                  type: boolean
                              patch:
                                type: string
                              path:
                                type: string
                              target:
                                type: object
                                properties:
                                  annotationSelector:
                                    type: string
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  labelSelector:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                  version:
                                    type: string
                        replicas:
                          description: Replicas is a list of Kustomize Replicas override specifications
                          type: array
                          items:
                            type: object
                            required:
                              - count
                              - name
                            properties:
                              count:
                                description: Number of replicas
                                x-kubernetes-int-or-string: true
                              name:
                                description: Name of Deployment or StatefulSet
                                type: string
                        version:
                          description: Version controls which version of Kustomize to use for rendering manifests
                          type: string
                    path:
                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                      type: string
                    plugin:
                      description: Plugin holds config management plugin specific options
                      type: object
                      properties:
                        env:
                          description: Env is a list of environment variable entries
                          type: array
                          items:
                            description: EnvEntry represents an entry in the application's environment
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                description: Name is the name of the variable, usually expressed in uppercase
                                type: string
                              value:
                                description: Value is the value of the variable
                                type: string
                        name:
                          type: string
                        parameters:
                          type: array
                          items:
                            type: object
                            properties:
                              array:
                                description: Array is the value of an array type parameter.
                                type: array
                                items:
                                  type: string
                              map:
                                description: Map is the value of a map type parameter.
                                type: object
                                additionalProperties:
                                  type: string
                              name:
                                description: Name is the name identifying a parameter.
                                type: string
                              string:
                                description: String_ is the value of a string type parameter.
                                type: string
                    ref:
                      description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                      type: string
                    repoURL:
                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                      type: string
                    targetRevision:
                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                      type: string
                sources:
                  description: Sources is a reference to the location of the application's manifests or chart
                  type: array
                  items:
                    description: ApplicationSource contains all required information about the source of an application
                    type: object
                    required:
                      - repoURL
                    properties:
                      chart:
                        description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                        type: string
                      directory:
                        description: Directory holds path/directory specific options
                        type: object
                        properties:
                          exclude:
                            description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                            type: string
                          include:
                            description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                            type: string
                          jsonnet:
                            description: Jsonnet holds options specific to Jsonnet
                            type: object
                            properties:
                              extVars:
                                description: ExtVars is a list of Jsonnet External Variables
                                type: array
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                              libs:
                                description: Additional library search dirs
                                type: array
                                items:
                                  type: string
                              tlas:
                                description: TLAS is a list of Jsonnet Top-level Arguments
                                type: array
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                          recurse:
                            description: Recurse specifies whether to scan a directory recursively for manifests
                            type: boolean
                      helm:
                        description: Helm holds helm specific options
                        type: object
                        properties:
                          fileParameters:
                            description: FileParameters are file parameters to the helm template
                            type: array
                            items:
                              description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                              type: object
                              properties:
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                path:
                                  description: Path is the path to the file containing the values for the Helm parameter
                                  type: string
                          ignoreMissingValueFiles:
                            description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                            type: boolean
                          parameters:
                            description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                            type: array
                            items:
                              description: HelmParameter is a parameter that's passed to helm template during manifest generation
                              type: object
                              properties:
                                forceString:
                                  description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                  type: boolean
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                value:
                                  description: Value is the value for the Helm parameter
                                  type: string
                          passCredentials:
                            description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                            type: boolean
                          releaseName:
                            description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                            type: string
                          skipCrds:
                            description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                            type: boolean
                          valueFiles:
                            description: ValuesFiles is a list of Helm value files to use when generating a template
                            type: array
                            items:
                              type: string
                          values:
                            description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                            type: string
                          valuesObject:
                            description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                            x-kubernetes-preserve-unknown-fields: true
                          version:
                            description: Version is the Helm version to use for templating ("3")
                            type: string
                      kustomize:
                        description: Kustomize holds kustomize specific options
                        type: object
                        properties:
                          commonAnnotations:
                            description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                            type: object
                            additionalProperties:
                              type: string
                          commonAnnotationsEnvsubst:
                            description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                            type: boolean
                          commonLabels:
                            description: CommonLabels is a list of additional labels to add to rendered manifests
                            type: object
                            additionalProperties:
                              type: string
                          components:
                            description: Components specifies a list of kustomize components to add to the kustomization before building
                            type: array
                            items:
                              type: string
                          forceCommonAnnotations:
                            description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                            type: boolean
                          forceCommonLabels:
                            description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                            type: boolean
                          images:
                            description: Images is a list of Kustomize image override specifications
                            type: array
                            items:
                              description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                              type: string
                          labelWithoutSelector:
                            description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                            type: boolean
                          namePrefix:
                            description: NamePrefix is a prefix appended to resources for Kustomize apps
                            type: string
                          nameSuffix:
                            description: NameSuffix is a suffix appended to resources for Kustomize apps
                            type: string
                          namespace:
                            description: Namespace sets the namespace that Kustomize adds to all resources
                            type: string
                          patches:
                            description: Patches is a list of Kustomize patches
                            type: array
                            items:
                              type: object
                              properties:
                                options:
                                  type: object
                                  additionalProperties:
                                    type: boolean
                                patch:
                                  type: string
                                path:
                                  type: string
                                target:
                                  type: object
                                  properties:
                                    annotationSelector:
                                      type: string
                                    group:
                                      type: string
                                    kind:
                                      type: string
                                    labelSelector:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    version:
                                      type: string
                          replicas:
                            description: Replicas is a list of Kustomize Replicas override specifications
                            type: array
                            items:
                              type: object
                              required:
                                - count
                                - name
                              properties:
                                count:
                                  description: Number of replicas
                                  x-kubernetes-int-or-string: true
                                name:
                                  description: Name of Deployment or StatefulSet
                                  type: string
                          version:
                            description: Version controls which version of Kustomize to use for rendering manifests
                            type: string
                      path:
                        description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                        type: string
                      plugin:
                        description: Plugin holds config management plugin specific options
                        type: object
                        properties:
                          env:
                            description: Env is a list of environment variable entries
                            type: array
                            items:
                              description: EnvEntry represents an entry in the application's environment
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: Name is the name of the variable, usually expressed in uppercase
                                  type: string
                                value:
                                  description: Value is the value of the variable
                                  type: string
                          name:
                            type: string
                          parameters:
                            type: array
                            items:
                              type: object
                              properties:
                                array:
                                  description: Array is the value of an array type parameter.
                                  type: array
                                  items:
                                    type: string
                                map:
                                  description: Map is the value of a map type parameter.
                                  type: object
                                  additionalProperties:
                                    type: string
                                name:
                                  description: Name is the name identifying a parameter.
                                  type: string
                                string:
                                  description: String_ is the value of a string type parameter.
                                  type: string
                      ref:
                        description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                        type: string
                      repoURL:
                        description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                        type: string
                      targetRevision:
                        description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                        type: string
                syncPolicy:
                  description: SyncPolicy controls when and how a sync will be performed
                  type: object
                  properties:
                    automated:
                      description: Automated will keep an application synced to the target revision
                      type: object
                      properties:
                        allowEmpty:
                          description: "AllowEmpty allows apps have zero live resources (default: false)"
                          type: boolean
                        prune:
                          description: "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                          type: boolean
                        selfHeal:
                          description: "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                          type: boolean
                    managedNamespaceMetadata:
                      description: ManagedNamespaceMetadata controls metadata in the given namespace (if CreateNamespace=true)
                      type: object
                      properties:
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                        labels:
                          type: object
                          additionalProperties:
                            type: string
                    retry:
                      description: Retry controls failed sync retry behavior
                      type: object
                      properties:
                        backoff:
                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                          type: object
                          properties:
                            duration:
                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                              type: string
                            factor:
                              description: Factor is a factor to multiply the base duration after each failed retry
                              type: integer
                              format: int64
                            maxDuration:
                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                              type: string
                        limit:
                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                          type: integer
                          format: int64
                    syncOptions:
                      description: Options allow you to specify whole app sync-options
                      type: array
                      items:
                        type: string
            status:
              description: ApplicationStatus contains status information for the application
              type: object
              properties:
                conditions:
                  description: Conditions is a list of currently observed application conditions
                  type: array
                  items:
                    description: ApplicationCondition contains details about an application condition, which is usually an error or warning
                    type: object
                    required:
                      - message
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the time the condition was last observed
                        type: string
                        format: date-time
                      message:
                        description: Message contains human-readable message indicating details about condition
                        type: string
                      type:
                        description: Type is an application condition type
                        type: string
                controllerNamespace:
                  description: ControllerNamespace indicates the namespace in which the application controller is located
                  type: string
                health:
                  description: Health contains information about the application's current health status
                  type: object
                  properties:
                    message:
                      description: Message is a human-readable informational message describing the health status
                      type: string
                    status:
                      description: Status holds the status code of the application or resource
                      type: string
                history:
                  description: History contains information about the application's sync history
                  type: array
                  items:
                    description: RevisionHistory contains history information about a previous sync
                    type: object
                    required:
                      - deployedAt
                      - id
                    properties:
                      deployStartedAt:
                        description: DeployStartedAt holds the time the sync operation started
                        type: string
                        format: date-time
                      deployedAt:
                        description: DeployedAt holds the time the sync operation completed
                        type: string
                        format: date-time
                      id:
                        description: ID is an auto incrementing identifier of the RevisionHistory
                        type: integer
                        format: int64
                      initiatedBy:
                        description: InitiatedBy contains information about who initiated the operations
                        type: object
                        properties:
                          automated:
                            description: Automated is set to true if operation was initiated automatically by the application controller.
                            type: boolean
                          username:
                            description: Username contains the name of a user who started operation
                            type: string
                      revision:
                        description: Revision holds the revision the sync was performed against
                        type: string
                      revisions:
                        description: Revisions holds the revision of each source in sources field the sync was performed against
                        type: array
                        items:
                          type: string
                      source:
                        description: Source is a reference to the application source used for the sync operation
                        type: object
                        required:
                          - repoURL
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            type: object
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                type: object
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  libs:
                                    description: Additional library search dirs
                                    type: array
                                    items:
                                      type: string
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                          helm:
                            description: Helm holds helm specific options
                            type: object
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                type: array
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                type: array
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                              passCredentials:
                                description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                type: array
                                items:
                                  type: string
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                type: string
                              valuesObject:
                                description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the Helm version to use for templating ("3")
                                type: string
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            type: object
                            properties:
                              commonAnnotations:
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              commonAnnotationsEnvsubst:
                                description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                type: boolean
                              commonLabels:
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              components:
                                description: Components specifies a list of kustomize components to add to the kustomization before building
                                type: array
                                items:
                                  type: string
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                type: array
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                              labelWithoutSelector:
                                description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                type: boolean
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              namespace:
                                description: Namespace sets the namespace that Kustomize adds to all resources
                                type: string
                              patches:
                                description: Patches is a list of Kustomize patches
                                type: array
                                items:
                                  type: object
                                  properties:
                                    options:
                                      type: object
                                      additionalProperties:
                                        type: boolean
                                    patch:
                                      type: string
                                    path:
                                      type: string
                                    target:
                                      type: object
                                      properties:
                                        annotationSelector:
                                          type: string
                                        group:
                                          type: string
                                        kind:
                                          type: string
                                        labelSelector:
                                          type: string
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        version:
                                          type: string
                              replicas:
                                description: Replicas is a list of Kustomize Replicas override specifications
                                type: array
                                items:
                                  type: object
                                  required:
                                    - count
                                    - name
                                  properties:
                                    count:
                                      description: Number of replicas
                                      x-kubernetes-int-or-string: true
                                    name:
                                      description: Name of Deployment or StatefulSet
                                      type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: Plugin holds config management plugin specific options
                            type: object
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                type: array
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                              name:
                                type: string
                              parameters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    array:
                                      description: Array is the value of an array type parameter.
                                      type: array
                                      items:
                                        type: string
                                    map:
                                      description: Map is the value of a map type parameter.
                                      type: object
                                      additionalProperties:
                                        type: string
                                    name:
                                      description: Name is the name identifying a parameter.
                                      type: string
                                    string:
                                      description: String_ is the value of a string type parameter.
                                      type: string
                          ref:
                            description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                      sources:
                        description: Sources is a reference to the application sources used for the sync operation
                        type: array
                        items:
                          description: ApplicationSource contains all required information about the source of an application
                          type: object
                          required:
                            - repoURL
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              type: object
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  type: object
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                    libs:
                                      description: Additional library search dirs
                                      type: array
                                      items:
                                        type: string
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                            helm:
                              description: Helm holds helm specific options
                              type: object
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  type: array
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  type: array
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  type: array
                                  items:
                                    type: string
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              type: object
                              properties:
                                commonAnnotations:
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                components:
                                  description: Components specifies a list of kustomize components to add to the kustomization before building
                                  type: array
                                  items:
                                    type: string
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  type: array
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                labelWithoutSelector:
                                  description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                  type: boolean
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      options:
                                        type: object
                                        additionalProperties:
                                          type: boolean
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        type: object
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - count
                                      - name
                                    properties:
                                      count:
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              type: object
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  type: array
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                name:
                                  type: string
                                parameters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        type: array
                                        items:
                                          type: string
                                      map:
                                        description: Map is the value of a map type parameter.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                observedAt:
                  description: "ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field"
                  type: string
                  format: date-time
                operationState:
                  description: OperationState contains information about any ongoing operations, such as a sync
                  type: object
                  required:
                    - operation
                    - phase
                    - startedAt
                  properties:
                    finishedAt:
                      description: FinishedAt contains time of operation completion
                      type: string
                      format: date-time
                    message:
                      description: Message holds any pertinent messages when attempting to perform operation (typically errors).
                      type: string
                    operation:
                      description: Operation is the original requested operation
                      type: object
                      properties:
                        info:
                          description: Info is a list of informational items for this operation
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                        initiatedBy:
                          description: InitiatedBy contains information about who initiated the operations
                          type: object
                          properties:
                            automated:
                              description: Automated is set to true if operation was initiated automatically by the application controller.
                              type: boolean
                            username:
                              description: Username contains the name of a user who started operation
                              type: string
                        retry:
                          description: Retry controls the strategy to apply if a sync fails
                          type: object
                          properties:
                            backoff:
                              description: Backoff controls how to backoff on subsequent retries of failed syncs
                              type: object
                              properties:
                                duration:
                                  description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                  type: string
                                factor:
                                  description: Factor is a factor to multiply the base duration after each failed retry
                                  type: integer
                                  format: int64
                                maxDuration:
                                  description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                  type: string
                            limit:
                              description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                              type: integer
                              format: int64
                        sync:
                          description: Sync contains parameters for the operation
                          type: object
                          properties:
                            dryRun:
                              description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                              type: boolean
                            manifests:
                              description: Manifests is an optional field that overrides sync source with a local directory for development
                              type: array
                              items:
                                type: string
                            prune:
                              description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                              type: boolean
                            resources:
                              description: Resources describes which resources shall be part of the sync
                              type: array
                              items:
                                description: SyncOperationResource contains resources to sync.
                                type: object
                                required:
                                  - kind
                                  - name
                                properties:
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                            revision:
                              description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                              type: string
                            revisions:
                              description: Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
                              type: array
                              items:
                                type: string
                            source:
                              description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                              type: object
                              required:
                                - repoURL
                              properties:
                                chart:
                                  description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                  type: string
                                directory:
                                  description: Directory holds path/directory specific options
                                  type: object
                                  properties:
                                    exclude:
                                      description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                      type: string
                                    include:
                                      description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                      type: string
                                    jsonnet:
                                      description: Jsonnet holds options specific to Jsonnet
                                      type: object
                                      properties:
                                        extVars:
                                          description: ExtVars is a list of Jsonnet External Variables
                                          type: array
                                          items:
                                            description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                            type: object
                                            required:
                                              - name
                                              - value
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                        libs:
                                          description: Additional library search dirs
                                          type: array
                                          items:
                                            type: string
                                        tlas:
                                          description: TLAS is a list of Jsonnet Top-level Arguments
                                          type: array
                                          items:
                                            description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                            type: object
                                            required:
                                              - name
                                              - value
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                    recurse:
                                      description: Recurse specifies whether to scan a directory recursively for manifests
                                      type: boolean
                                helm:
                                  description: Helm holds helm specific options
                                  type: object
                                  properties:
                                    fileParameters:
                                      description: FileParameters are file parameters to the helm template
                                      type: array
                                      items:
                                        description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                        type: object
                                        properties:
                                          name:
                                            description: Name is the name of the Helm parameter
                                            type: string
                                          path:
                                            description: Path is the path to the file containing the values for the Helm parameter
                                            type: string
                                    ignoreMissingValueFiles:
                                      description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                      type: boolean
                                    parameters:
                                      description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                      type: array
                                      items:
                                        description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                        type: object
                                        properties:
                                          forceString:
                                            description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                            type: boolean
                                          name:
                                            description: Name is the name of the Helm parameter
                                            type: string
                                          value:
                                            description: Value is the value for the Helm parameter
                                            type: string
                                    passCredentials:
                                      description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                      type: boolean
                                    releaseName:
                                      description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                      type: string
                                    skipCrds:
                                      description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                      type: boolean
                                    valueFiles:
                                      description: ValuesFiles is a list of Helm value files to use when generating a template
                                      type: array
                                      items:
                                        type: string
                                    values:
                                      description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                      type: string
                                    valuesObject:
                                      description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                      x-kubernetes-preserve-unknown-fields: true
                                    version:
                                      description: Version is the Helm version to use for templating ("3")
                                      type: string
                                kustomize:
                                  description: Kustomize holds kustomize specific options
                                  type: object
                                  properties:
                                    commonAnnotations:
                                      description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                      type: object
                                      additionalProperties:
                                        type: string
                                    commonAnnotationsEnvsubst:
                                      description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                      type: boolean
                                    commonLabels:
                                      description: CommonLabels is a list of additional labels to add to rendered manifests
                                      type: object
                                      additionalProperties:
                                        type: string
                                    components:
                                      description: Components specifies a list of kustomize components to add to the kustomization before building
                                      type: array
                                      items:
                                        type: string
                                    forceCommonAnnotations:
                                      description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                      type: boolean
                                    forceCommonLabels:
                                      description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                      type: boolean
                                    images:
                                      description: Images is a list of Kustomize image override specifications
                                      type: array
                                      items:
                                        description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                        type: string
                                    labelWithoutSelector:
                                      description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                      type: boolean
                                    namePrefix:
                                      description: NamePrefix is a prefix appended to resources for Kustomize apps
                                      type: string
                                    nameSuffix:
                                      description: NameSuffix is a suffix appended to resources for Kustomize apps
                                      type: string
                                    namespace:
                                      description: Namespace sets the namespace that Kustomize adds to all resources
                                      type: string
                                    patches:
                                      description: Patches is a list of Kustomize patches
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          options:
                                            type: object
                                            additionalProperties:
                                              type: boolean
                                          patch:
                                            type: string
                                          path:
                                            type: string
                                          target:
                                            type: object
                                            properties:
                                              annotationSelector:
                                                type: string
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              labelSelector:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                    replicas:
                                      description: Replicas is a list of Kustomize Replicas override specifications
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - count
                                          - name
                                        properties:
                                          count:
                                            description: Number of replicas
                                            x-kubernetes-int-or-string: true
                                          name:
                                            description: Name of Deployment or StatefulSet
                                            type: string
                                    version:
                                      description: Version controls which version of Kustomize to use for rendering manifests
                                      type: string
                                path:
                                  description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                  type: string
                                plugin:
                                  description: Plugin holds config management plugin specific options
                                  type: object
                                  properties:
                                    env:
                                      description: Env is a list of environment variable entries
                                      type: array
                                      items:
                                        description: EnvEntry represents an entry in the application's environment
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          name:
                                            description: Name is the name of the variable, usually expressed in uppercase
                                            type: string
                                          value:
                                            description: Value is the value of the variable
                                            type: string
                                    name:
                                      type: string
                                    parameters:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          array:
                                            description: Array is the value of an array type parameter.
                                            type: array
                                            items:
                                              type: string
                                          map:
                                            description: Map is the value of a map type parameter.
                                            type: object
                                            additionalProperties:
                                              type: string
                                          name:
                                            description: Name is the name identifying a parameter.
                                            type: string
                                          string:
                                            description: String_ is the value of a string type parameter.
                                            type: string
                                ref:
                                  description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                  type: string
                                repoURL:
                                  description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                  type: string
                                targetRevision:
                                  description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                  type: string
                            sources:
                              description: Sources overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                              type: array
                              items:
                                description: ApplicationSource contains all required information about the source of an application
                                type: object
                                required:
                                  - repoURL
                                properties:
                                  chart:
                                    description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                    type: string
                                  directory:
                                    description: Directory holds path/directory specific options
                                    type: object
                                    properties:
                                      exclude:
                                        description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                        type: string
                                      include:
                                        description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                        type: string
                                      jsonnet:
                                        description: Jsonnet holds options specific to Jsonnet
                                        type: object
                                        properties:
                                          extVars:
                                            description: ExtVars is a list of Jsonnet External Variables
                                            type: array
                                            items:
                                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                code:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                          libs:
                                            description: Additional library search dirs
                                            type: array
                                            items:
                                              type: string
                                          tlas:
                                            description: TLAS is a list of Jsonnet Top-level Arguments
                                            type: array
                                            items:
                                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                code:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                      recurse:
                                        description: Recurse specifies whether to scan a directory recursively for manifests
                                        type: boolean
                                  helm:
                                    description: Helm holds helm specific options
                                    type: object
                                    properties:
                                      fileParameters:
                                        description: FileParameters are file parameters to the helm template
                                        type: array
                                        items:
                                          description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                          type: object
                                          properties:
                                            name:
                                              description: Name is the name of the Helm parameter
                                              type: string
                                            path:
                                              description: Path is the path to the file containing the values for the Helm parameter
                                              type: string
                                      ignoreMissingValueFiles:
                                        description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                        type: boolean
                                      parameters:
                                        description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                        type: array
                                        items:
                                          description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                          type: object
                                          properties:
                                            forceString:
                                              description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                              type: boolean
                                            name:
                                              description: Name is the name of the Helm parameter
                                              type: string
                                            value:
                                              description: Value is the value for the Helm parameter
                                              type: string
                                      passCredentials:
                                        description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                        type: boolean
                                      releaseName:
                                        description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                        type: string
                                      skipCrds:
                                        description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                        type: boolean
                                      valueFiles:
                                        description: ValuesFiles is a list of Helm value files to use when generating a template
                                        type: array
                                        items:
                                          type: string
                                      values:
                                        description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                        type: string
                                      valuesObject:
                                        description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                        x-kubernetes-preserve-unknown-fields: true
                                      version:
                                        description: Version is the Helm version to use for templating ("3")
                                        type: string
                                  kustomize:
                                    description: Kustomize holds kustomize specific options
                                    type: object
                                    properties:
                                      commonAnnotations:
                                        description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                        type: object
                                        additionalProperties:
                                          type: string
                                      commonAnnotationsEnvsubst:
                                        description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                        type: boolean
                                      commonLabels:
                                        description: CommonLabels is a list of additional labels to add to rendered manifests
                                        type: object
                                        additionalProperties:
                                          type: string
                                      components:
                                        description: Components specifies a list of kustomize components to add to the kustomization before building
                                        type: array
                                        items:
                                          type: string
                                      forceCommonAnnotations:
                                        description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                        type: boolean
                                      forceCommonLabels:
                                        description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                        type: boolean
                                      images:
                                        description: Images is a list of Kustomize image override specifications
                                        type: array
                                        items:
                                          description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                          type: string
                                      labelWithoutSelector:
                                        description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                        type: boolean
                                      namePrefix:
                                        description: NamePrefix is a prefix appended to resources for Kustomize apps
                                        type: string
                                      nameSuffix:
                                        description: NameSuffix is a suffix appended to resources for Kustomize apps
                                        type: string
                                      namespace:
                                        description: Namespace sets the namespace that Kustomize adds to all resources
                                        type: string
                                      patches:
                                        description: Patches is a list of Kustomize patches
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            options:
                                              type: object
                                              additionalProperties:
                                                type: boolean
                                            patch:
                                              type: string
                                            path:
                                              type: string
                                            target:
                                              type: object
                                              properties:
                                                annotationSelector:
                                                  type: string
                                                group:
                                                  type: string
                                                kind:
                                                  type: string
                                                labelSelector:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                version:
                                                  type: string
                                      replicas:
                                        description: Replicas is a list of Kustomize Replicas override specifications
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - count
                                            - name
                                          properties:
                                            count:
                                              description: Number of replicas
                                              x-kubernetes-int-or-string: true
                                            name:
                                              description: Name of Deployment or StatefulSet
                                              type: string
                                      version:
                                        description: Version controls which version of Kustomize to use for rendering manifests
                                        type: string
                                  path:
                                    description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                    type: string
                                  plugin:
                                    description: Plugin holds config management plugin specific options
                                    type: object
                                    properties:
                                      env:
                                        description: Env is a list of environment variable entries
                                        type: array
                                        items:
                                          description: EnvEntry represents an entry in the application's environment
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: Name is the name of the variable, usually expressed in uppercase
                                              type: string
                                            value:
                                              description: Value is the value of the variable
                                              type: string
                                      name:
                                        type: string
                                      parameters:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            array:
                                              description: Array is the value of an array type parameter.
                                              type: array
                                              items:
                                                type: string
                                            map:
                                              description: Map is the value of a map type parameter.
                                              type: object
                                              additionalProperties:
                                                type: string
                                            name:
                                              description: Name is the name identifying a parameter.
                                              type: string
                                            string:
                                              description: String_ is the value of a string type parameter.
                                              type: string
                                  ref:
                                    description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                    type: string
                                  repoURL:
                                    description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                    type: string
                                  targetRevision:
                                    description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                    type: string
                            syncOptions:
                              description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                              type: array
                              items:
                                type: string
                            syncStrategy:
                              description: SyncStrategy describes how to perform the sync
                              type: object
                              properties:
                                apply:
                                  description: Apply will perform a `kubectl apply` to perform the sync.
                                  type: object
                                  properties:
                                    force:
                                      description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                      type: boolean
                                hook:
                                  description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                                  type: object
                                  properties:
                                    force:
                                      description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                      type: boolean
                    phase:
                      description: Phase is the current phase of the operation
                      type: string
                    retryCount:
                      description: RetryCount contains time of operation retries
                      type: integer
                      format: int64
                    startedAt:
                      description: StartedAt contains time of operation start
                      type: string
                      format: date-time
                    syncResult:
                      description: SyncResult is the result of a Sync operation
                      type: object
                      required:
                        - revision
                      properties:
                        managedNamespaceMetadata:
                          description: ManagedNamespaceMetadata contains the current sync state of managed namespace metadata
                          type: object
                          properties:
                            annotations:
                              type: object
                              additionalProperties:
                                type: string
                            labels:
                              type: object
                              additionalProperties:
                                type: string
                        resources:
                          description: Resources contains a list of sync result items for each individual resource in a sync operation
                          type: array
                          items:
                            description: ResourceResult holds the operation result details of a specific resource
                            type: object
                            required:
                              - group
                              - kind
                              - name
                              - namespace
                              - version
                            properties:
                              group:
                                description: Group specifies the API group of the resource
                                type: string
                              hookPhase:
                                description: HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
                                type: string
                              hookType:
                                description: HookType specifies the type of the hook. Empty for non-hook resources
                                type: string
                              kind:
                                description: Kind specifies the API kind of the resource
                                type: string
                              message:
                                description: Message contains an informational or error message for the last sync OR operation
                                type: string
                              name:
                                description: Name specifies the name of the resource
                                type: string
                              namespace:
                                description: Namespace specifies the target namespace of the resource
                                type: string
                              status:
                                description: Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
                                type: string
                              syncPhase:
                                description: SyncPhase indicates the particular phase of the sync that this result was acquired in
                                type: string
                              version:
                                description: Version specifies the API version of the resource
                                type: string
                        revision:
                          description: Revision holds the revision this sync operation was performed to
                          type: string
                        revisions:
                          description: Revisions holds the revision this sync operation was performed for respective indexed source in sources field
                          type: array
                          items:
                            type: string
                        source:
                          description: Source records the application source information of the sync, used for comparing auto-sync
                          type: object
                          required:
                            - repoURL
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              type: object
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  type: object
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                    libs:
                                      description: Additional library search dirs
                                      type: array
                                      items:
                                        type: string
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                            helm:
                              description: Helm holds helm specific options
                              type: object
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  type: array
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  type: array
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  type: array
                                  items:
                                    type: string
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              type: object
                              properties:
                                commonAnnotations:
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                components:
                                  description: Components specifies a list of kustomize components to add to the kustomization before building
                                  type: array
                                  items:
                                    type: string
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  type: array
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                labelWithoutSelector:
                                  description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                  type: boolean
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      options:
                                        type: object
                                        additionalProperties:
                                          type: boolean
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        type: object
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - count
                                      - name
                                    properties:
                                      count:
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              type: object
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  type: array
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                name:
                                  type: string
                                parameters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        type: array
                                        items:
                                          type: string
                                      map:
                                        description: Map is the value of a map type parameter.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                        sources:
                          description: Source records the application source information of the sync, used for comparing auto-sync
                          type: array
                          items:
                            description: ApplicationSource contains all required information about the source of an application
                            type: object
                            required:
                              - repoURL
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific options
                                type: object
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to Jsonnet
                                    type: object
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet External Variables
                                        type: array
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      libs:
                                        description: Additional library search dirs
                                        type: array
                                        items:
                                          type: string
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                        type: array
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                  recurse:
                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                    type: boolean
                              helm:
                                description: Helm holds helm specific options
                                type: object
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters to the helm template
                                    type: array
                                    items:
                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                      type: object
                                      properties:
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file containing the values for the Helm parameter
                                          type: string
                                  ignoreMissingValueFiles:
                                    description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                    type: boolean
                                  parameters:
                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                    type: array
                                    items:
                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                      type: object
                                      properties:
                                        forceString:
                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        value:
                                          description: Value is the value for the Helm parameter
                                          type: string
                                  passCredentials:
                                    description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                    type: boolean
                                  releaseName:
                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                    type: string
                                  skipCrds:
                                    description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                    type: boolean
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                    type: array
                                    items:
                                      type: string
                                  values:
                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                    type: string
                                  valuesObject:
                                    description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the Helm version to use for templating ("3")
                                    type: string
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                type: object
                                properties:
                                  commonAnnotations:
                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                    type: object
                                    additionalProperties:
                                      type: string
                                  commonAnnotationsEnvsubst:
                                    description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                    type: boolean
                                  commonLabels:
                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                    type: object
                                    additionalProperties:
                                      type: string
                                  components:
                                    description: Components specifies a list of kustomize components to add to the kustomization before building
                                    type: array
                                    items:
                                      type: string
                                  forceCommonAnnotations:
                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                    type: boolean
                                  forceCommonLabels:
                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                    type: boolean
                                  images:
                                    description: Images is a list of Kustomize image override specifications
                                    type: array
                                    items:
                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                  labelWithoutSelector:
                                    description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                    type: boolean
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                    type: string
                                  namespace:
                                    description: Namespace sets the namespace that Kustomize adds to all resources
                                    type: string
                                  patches:
                                    description: Patches is a list of Kustomize patches
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: object
                                          additionalProperties:
                                            type: boolean
                                        patch:
                                          type: string
                                        path:
                                          type: string
                                        target:
                                          type: object
                                          properties:
                                            annotationSelector:
                                              type: string
                                            group:
                                              type: string
                                            kind:
                                              type: string
                                            labelSelector:
                                              type: string
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                            version:
                                              type: string
                                  replicas:
                                    description: Replicas is a list of Kustomize Replicas override specifications
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - count
                                        - name
                                      properties:
                                        count:
                                          description: Number of replicas
                                          x-kubernetes-int-or-string: true
                                        name:
                                          description: Name of Deployment or StatefulSet
                                          type: string
                                  version:
                                    description: Version controls which version of Kustomize to use for rendering manifests
                                    type: string
                              path:
                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                type: string
                              plugin:
                                description: Plugin holds config management plugin specific options
                                type: object
                                properties:
                                  env:
                                    description: Env is a list of environment variable entries
                                    type: array
                                    items:
                                      description: EnvEntry represents an entry in the application's environment
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: Name is the name of the variable, usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                  name:
                                    type: string
                                  parameters:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        array:
                                          description: Array is the value of an array type parameter.
                                          type: array
                                          items:
                                            type: string
                                        map:
                                          description: Map is the value of a map type parameter.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        name:
                                          description: Name is the name identifying a parameter.
                                          type: string
                                        string:
                                          description: String_ is the value of a string type parameter.
                                          type: string
                              ref:
                                description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                type: string
                              repoURL:
                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                type: string
                reconciledAt:
                  description: ReconciledAt indicates when the application state was reconciled using the latest git version
                  type: string
                  format: date-time
                resourceHealthSource:
                  description: "ResourceHealthSource indicates where the resource health status is stored: inline if not set or appTree"
                  type: string
                resources:
                  description: Resources is a list of Kubernetes resources managed by this application
                  type: array
                  items:
                    description: "ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type"
                    type: object
                    properties:
                      group:
                        type: string
                      health:
                        description: HealthStatus contains information about the currently observed health state of an application or resource
                        type: object
                        properties:
                          message:
                            description: Message is a human-readable informational message describing the health status
                            type: string
                          status:
                            description: Status holds the status code of the application or resource
                            type: string
                      hook:
                        type: boolean
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      requiresPruning:
                        type: boolean
                      status:
                        description: SyncStatusCode is a type which represents possible comparison results
                        type: string
                      syncWave:
                        type: integer
                        format: int64
                      version:
                        type: string
                sourceType:
                  description: SourceType specifies the type of this application
                  type: string
                sourceTypes:
                  description: SourceTypes specifies the type of the sources included in the application
                  type: array
                  items:
                    description: ApplicationSourceType specifies the type of the application's source
                    type: string
                summary:
                  description: Summary contains a list of URLs and container images used by this application
                  type: object
                  properties:
                    externalURLs:
                      description: ExternalURLs holds all external URLs of application child resources.
                      type: array
                      items:
                        type: string
                    images:
                      description: Images holds all images of application child resources.
                      type: array
                      items:
                        type: string
                sync:
                  description: Sync contains information about the application's current sync status
                  type: object
                  required:
                    - status
                  properties:
                    comparedTo:
                      description: ComparedTo contains information about what has been compared
                      type: object
                      required:
                        - destination
                      properties:
                        destination:
                          description: Destination is a reference to the application's destination used for comparison
                          type: object
                          properties:
                            name:
                              description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                              type: string
                            namespace:
                              description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                              type: string
                            server:
                              description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                              type: string
                        ignoreDifferences:
                          description: IgnoreDifferences is a reference to the application's ignored differences used for comparison
                          type: array
                          items:
                            description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                            type: object
                            required:
                              - kind
                            properties:
                              group:
                                type: string
                              jqPathExpressions:
                                type: array
                                items:
                                  type: string
                              jsonPointers:
                                type: array
                                items:
                                  type: string
                              kind:
                                type: string
                              managedFieldsManagers:
                                description: ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
                                type: array
                                items:
                                  type: string
                              name:
                                type: string
                              namespace:
                                type: string
                        source:
                          description: Source is a reference to the application's source used for comparison
                          type: object
                          required:
                            - repoURL
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              type: object
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  type: object
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                    libs:
                                      description: Additional library search dirs
                                      type: array
                                      items:
                                        type: string
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                            helm:
                              description: Helm holds helm specific options
                              type: object
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  type: array
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  type: array
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  type: array
                                  items:
                                    type: string
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              type: object
                              properties:
                                commonAnnotations:
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                components:
                                  description: Components specifies a list of kustomize components to add to the kustomization before building
                                  type: array
                                  items:
                                    type: string
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  type: array
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                labelWithoutSelector:
                                  description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                  type: boolean
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      options:
                                        type: object
                                        additionalProperties:
                                          type: boolean
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        type: object
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - count
                                      - name
                                    properties:
                                      count:
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              type: object
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  type: array
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                name:
                                  type: string
                                parameters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        type: array
                                        items:
                                          type: string
                                      map:
                                        description: Map is the value of a map type parameter.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                        sources:
                          description: Sources is a reference to the application's multiple sources used for comparison
                          type: array
                          items:
                            description: ApplicationSource contains all required information about the source of an application
                            type: object
                            required:
                              - repoURL
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific options
                                type: object
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to Jsonnet
                                    type: object
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet External Variables
                                        type: array
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      libs:
                                        description: Additional library search dirs
                                        type: array
                                        items:
                                          type: string
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                        type: array
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                  recurse:
                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                    type: boolean
                              helm:
                                description: Helm holds helm specific options
                                type: object
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters to the helm template
                                    type: array
                                    items:
                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                      type: object
                                      properties:
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file containing the values for the Helm parameter
                                          type: string
                                  ignoreMissingValueFiles:
                                    description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                    type: boolean
                                  parameters:
                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                    type: array
                                    items:
                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                      type: object
                                      properties:
                                        forceString:
                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        value:
                                          description: Value is the value for the Helm parameter
                                          type: string
                                  passCredentials:
                                    description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                    type: boolean
                                  releaseName:
                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                    type: string
                                  skipCrds:
                                    description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                    type: boolean
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                    type: array
                                    items:
                                      type: string
                                  values:
                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                    type: string
                                  valuesObject:
                                    description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the Helm version to use for templating ("3")
                                    type: string
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                type: object
                                properties:
                                  commonAnnotations:
                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                    type: object
                                    additionalProperties:
                                      type: string
                                  commonAnnotationsEnvsubst:
                                    description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                    type: boolean
                                  commonLabels:
                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                    type: object
                                    additionalProperties:
                                      type: string
                                  components:
                                    description: Components specifies a list of kustomize components to add to the kustomization before building
                                    type: array
                                    items:
                                      type: string
                                  forceCommonAnnotations:
                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                    type: boolean
                                  forceCommonLabels:
                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                    type: boolean
                                  images:
                                    description: Images is a list of Kustomize image override specifications
                                    type: array
                                    items:
                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                  labelWithoutSelector:
                                    description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                    type: boolean
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                    type: string
                                  namespace:
                                    description: Namespace sets the namespace that Kustomize adds to all resources
                                    type: string
                                  patches:
                                    description: Patches is a list of Kustomize patches
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: object
                                          additionalProperties:
                                            type: boolean
                                        patch:
                                          type: string
                                        path:
                                          type: string
                                        target:
                                          type: object
                                          properties:
                                            annotationSelector:
                                              type: string
                                            group:
                                              type: string
                                            kind:
                                              type: string
                                            labelSelector:
                                              type: string
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                            version:
                                              type: string
                                  replicas:
                                    description: Replicas is a list of Kustomize Replicas override specifications
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - count
                                        - name
                                      properties:
                                        count:
                                          description: Number of replicas
                                          x-kubernetes-int-or-string: true
                                        name:
                                          description: Name of Deployment or StatefulSet
                                          type: string
                                  version:
                                    description: Version controls which version of Kustomize to use for rendering manifests
                                    type: string
                              path:
                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                type: string
                              plugin:
                                description: Plugin holds config management plugin specific options
                                type: object
                                properties:
                                  env:
                                    description: Env is a list of environment variable entries
                                    type: array
                                    items:
                                      description: EnvEntry represents an entry in the application's environment
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: Name is the name of the variable, usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                  name:
                                    type: string
                                  parameters:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        array:
                                          description: Array is the value of an array type parameter.
                                          type: array
                                          items:
                                            type: string
                                        map:
                                          description: Map is the value of a map type parameter.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        name:
                                          description: Name is the name identifying a parameter.
                                          type: string
                                        string:
                                          description: String_ is the value of a string type parameter.
                                          type: string
                              ref:
                                description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                type: string
                              repoURL:
                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                type: string
                    revision:
                      description: Revision contains information about the revision the comparison has been performed to
                      type: string
                    revisions:
                      description: Revisions contains information about the revisions of multiple sources the comparison has been performed to
                      type: array
                      items:
                        type: string
                    status:
                      description: Status is the sync state of the comparison
                      type: string
          x-kubernetes-group-version-kind:
            - group: argoproj.io
              kind: Application
              version: v1alpha1
        io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
          description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
          type: object
          properties:
            annotations:
              description: "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
              type: object
              additionalProperties:
                type: string
            creationTimestamp:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
              type: integer
              format: int64
            deletionTimestamp:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
            finalizers:
              description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
              type: array
              items:
                type: string
              x-kubernetes-patch-strategy: merge
            generateName:
              description: "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
              type: integer
              format: int64
            labels:
              description: "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
              type: object
              additionalProperties:
                type: string
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
            name:
              description: "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
              type: string
            namespace:
              description:
                'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.


                Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces'
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
              x-kubernetes-patch-merge-key: uid
              x-kubernetes-patch-strategy: merge
            resourceVersion:
              description: "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
              type: string
        io.k8s.apimachinery.pkg.apis.meta.v1.Time:
          description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
          type: string
          format: date-time
        io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
          description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
          type: object
          properties:
            apiVersion:
              description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
              type: string
            fieldsType:
              description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
              type: string
            fieldsV1:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
            manager:
              description: Manager is an identifier of the workflow managing these fields.
              type: string
            operation:
              description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
              type: string
            subresource:
              description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
              type: string
            time:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
          description: "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff"
          type: object
        io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
          description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
          type: object
          required:
            - apiVersion
            - kind
            - name
            - uid
          properties:
            apiVersion:
              description: API version of the referent.
              type: string
            blockOwnerDeletion:
              description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
              type: boolean
            controller:
              description: If true, this reference points to the managing controller.
              type: boolean
            kind:
              description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            name:
              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
              type: string
            uid:
              description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
              type: string
          x-kubernetes-map-type: atomic
        io.argoproj.v1alpha1.ApplicationList:
          description: ApplicationList is a list of Application
          type: object
          required:
            - items
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            items:
              description: "List of applications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
              type: array
              items:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          x-kubernetes-group-version-kind:
            - group: argoproj.io
              kind: ApplicationList
              version: v1alpha1
        io.argoproj.v1alpha1.NotificationsConfiguration:
          description: NotificationsConfiguration is the Schema for the NotificationsConfiguration API
          type: object
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            spec:
              description: NotificationsConfigurationSpec allows users to define the triggers, templates, services, context and subscriptions for the notifications
              type: object
              properties:
                context:
                  description: Context is used to define some shared context between all notification templates
                  type: object
                  additionalProperties:
                    type: string
                services:
                  description: Services are used to deliver message
                  type: object
                  additionalProperties:
                    type: string
                subscriptions:
                  description: Subscriptions contain centrally managed global application subscriptions
                  type: object
                  additionalProperties:
                    type: string
                templates:
                  description: Templates are used to generate the notification template message
                  type: object
                  additionalProperties:
                    type: string
                triggers:
                  description: Triggers define the condition when the notification should be sent and list of templates required to generate the message Recipients can subscribe to the trigger and specify the required message template and destination notification service.
                  type: object
                  additionalProperties:
                    type: string
          x-kubernetes-group-version-kind:
            - group: argoproj.io
              kind: NotificationsConfiguration
              version: v1alpha1
        io.argoproj.v1alpha1.NotificationsConfigurationList:
          description: NotificationsConfigurationList is a list of NotificationsConfiguration
          type: object
          required:
            - items
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            items:
              description: "List of notificationsconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
              type: array
              items:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.NotificationsConfiguration"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          x-kubernetes-group-version-kind:
            - group: argoproj.io
              kind: NotificationsConfigurationList
              version: v1alpha1
        io.cncf.cni.whereabouts.v1alpha1.IPPool:
          description: IPPool is the Schema for Whereabouts for IP address allocation
          type: object
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            spec:
              description: IPPoolSpec defines the desired state of IPPool
              type: object
              required:
                - allocations
                - range
              properties:
                allocations:
                  description: Allocations is the set of allocated IPs for the given range. Its indices are a direct mapping to the IP with the same index/offset for the pool's range.
                  type: object
                  additionalProperties:
                    description: IPAllocation represents metadata about the pod/container owner of a specific IP
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
                      podref:
                        type: string
                range:
                  description: Range is a RFC 4632/4291-style string that represents an IP address and prefix length in CIDR notation
                  type: string
          x-kubernetes-group-version-kind:
            - group: whereabouts.cni.cncf.io
              kind: IPPool
              version: v1alpha1
        io.cncf.cni.whereabouts.v1alpha1.IPPoolList:
          description: IPPoolList is a list of IPPool
          type: object
          required:
            - items
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            items:
              description: "List of ippools. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
              type: array
              items:
                $ref: "#/components/schemas/io.cncf.cni.whereabouts.v1alpha1.IPPool"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          x-kubernetes-group-version-kind:
            - group: whereabouts.cni.cncf.io
              kind: IPPoolList
              version: v1alpha1
        io.cncf.cni.whereabouts.v1alpha1.OverlappingRangeIPReservation:
          description: OverlappingRangeIPReservation is the Schema for the OverlappingRangeIPReservations API
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            spec:
              description: OverlappingRangeIPReservationSpec defines the desired state of OverlappingRangeIPReservation
              type: object
              required:
                - containerid
              properties:
                containerid:
                  type: string
                podref:
                  type: string
          x-kubernetes-group-version-kind:
            - group: whereabouts.cni.cncf.io
              kind: OverlappingRangeIPReservation
              version: v1alpha1
        io.cncf.cni.whereabouts.v1alpha1.OverlappingRangeIPReservationList:
          description: OverlappingRangeIPReservationList is a list of OverlappingRangeIPReservation
          type: object
          required:
            - items
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            items:
              description: "List of overlappingrangeipreservations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
              type: array
              items:
                $ref: "#/components/schemas/io.cncf.cni.whereabouts.v1alpha1.OverlappingRangeIPReservation"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          x-kubernetes-group-version-kind:
            - group: whereabouts.cni.cncf.io
              kind: OverlappingRangeIPReservationList
              version: v1alpha1
        io.k8s.api.admissionregistration.v1.MatchCondition:
          description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
          type: object
          required:
            - name
            - expression
          properties:
            expression:
              description: |-
                Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:

                'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.
                  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
                'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the
                  request resource.
                Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/

                Required.
              type: string
            name:
              description: |-
                Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')

                Required.
              type: string
        io.k8s.api.admissionregistration.v1.MutatingWebhook:
          description: MutatingWebhook describes an admission webhook and the resources and operations it applies to.
          type: object
          required:
            - name
            - clientConfig
            - sideEffects
            - admissionReviewVersions
          properties:
            admissionReviewVersions:
              description: AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
              type: array
              items:
                type: string
            clientConfig:
              $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
            failurePolicy:
              description: |-
                FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.

                Possible enum values:
                - `"Fail"` means that an error calling the webhook causes the admission to fail.
                - `"Ignore"` means that an error calling the webhook is ignored.
              type: string
              enum:
                - Fail
                - Ignore
            matchConditions:
              description: |-
                MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.

                The exact matching logic is (in order):
                  1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
                  2. If ALL matchConditions evaluate to TRUE, the webhook is called.
                  3. If any matchCondition evaluates to an error (but none are FALSE):
                    - If failurePolicy=Fail, reject the request
                    - If failurePolicy=Ignore, the error is ignored and the webhook is skipped

                This is an alpha feature and managed by the AdmissionWebhookMatchConditions feature gate.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.MatchCondition"
              x-kubernetes-list-map-keys:
                - name
              x-kubernetes-list-type: map
              x-kubernetes-patch-merge-key: name
              x-kubernetes-patch-strategy: merge
            matchPolicy:
              description: |-
                matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".

                - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.

                - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.

                Defaults to "Equivalent"

                Possible enum values:
                - `"Equivalent"` means requests should be sent to the webhook if they modify a resource listed in rules via another API group or version.
                - `"Exact"` means requests should only be sent to the webhook if they exactly match a given rule.
              type: string
              enum:
                - Equivalent
                - Exact
            name:
              description: The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
              type: string
            namespaceSelector:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
            objectSelector:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
            reinvocationPolicy:
              description: |-
                reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".

                Never: the webhook will not be called more than once in a single admission evaluation.

                IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.

                Defaults to "Never".

                Possible enum values:
                - `"IfNeeded"` indicates that the webhook may be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call.
                - `"Never"` indicates that the webhook must not be called more than once in a single admission evaluation.
              type: string
              enum:
                - IfNeeded
                - Never
            rules:
              description: Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.RuleWithOperations"
            sideEffects:
              description: |-
                SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.

                Possible enum values:
                - `"None"` means that calling the webhook will have no side effects.
                - `"NoneOnDryRun"` means that calling the webhook will possibly have side effects, but if the request being reviewed has the dry-run attribute, the side effects will be suppressed.
                - `"Some"` means that calling the webhook will possibly have side effects. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
                - `"Unknown"` means that no information is known about the side effects of calling the webhook. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
              type: string
              enum:
                - None
                - NoneOnDryRun
                - Some
                - Unknown
            timeoutSeconds:
              description: TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
              type: integer
              format: int32
        io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
          description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
          type: object
          properties:
            continue:
              description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
              type: string
            remainingItemCount:
              description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
              type: integer
              format: int64
            resourceVersion:
              description: "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system."
              type: string
        io.k8s.api.admissionregistration.v1.ValidatingWebhook:
          description: ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
          type: object
          required:
            - name
            - clientConfig
            - sideEffects
            - admissionReviewVersions
          properties:
            admissionReviewVersions:
              description: AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
              type: array
              items:
                type: string
            clientConfig:
              $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
            failurePolicy:
              description: |-
                FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.

                Possible enum values:
                - `"Fail"` means that an error calling the webhook causes the admission to fail.
                - `"Ignore"` means that an error calling the webhook is ignored.
              type: string
              enum:
                - Fail
                - Ignore
            matchConditions:
              description: |-
                MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.

                The exact matching logic is (in order):
                  1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
                  2. If ALL matchConditions evaluate to TRUE, the webhook is called.
                  3. If any matchCondition evaluates to an error (but none are FALSE):
                    - If failurePolicy=Fail, reject the request
                    - If failurePolicy=Ignore, the error is ignored and the webhook is skipped

                This is an alpha feature and managed by the AdmissionWebhookMatchConditions feature gate.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.MatchCondition"
              x-kubernetes-list-map-keys:
                - name
              x-kubernetes-list-type: map
              x-kubernetes-patch-merge-key: name
              x-kubernetes-patch-strategy: merge
            matchPolicy:
              description: |-
                matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".

                - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.

                - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.

                Defaults to "Equivalent"

                Possible enum values:
                - `"Equivalent"` means requests should be sent to the webhook if they modify a resource listed in rules via another API group or version.
                - `"Exact"` means requests should only be sent to the webhook if they exactly match a given rule.
              type: string
              enum:
                - Equivalent
                - Exact
            name:
              description: The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
              type: string
            namespaceSelector:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
            objectSelector:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
            rules:
              description: Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.RuleWithOperations"
            sideEffects:
              description: |-
                SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.

                Possible enum values:
                - `"None"` means that calling the webhook will have no side effects.
                - `"NoneOnDryRun"` means that calling the webhook will possibly have side effects, but if the request being reviewed has the dry-run attribute, the side effects will be suppressed.
                - `"Some"` means that calling the webhook will possibly have side effects. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
                - `"Unknown"` means that no information is known about the side effects of calling the webhook. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
              type: string
              enum:
                - None
                - NoneOnDryRun
                - Some
                - Unknown
            timeoutSeconds:
              description: TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
              type: integer
              format: int32
        io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration:
          description: ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.
          type: object
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            webhooks:
              description: Webhooks is a list of webhooks and the affected resources and operations.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhook"
              x-kubernetes-patch-merge-key: name
              x-kubernetes-patch-strategy: merge
          x-kubernetes-group-version-kind:
            - group: admissionregistration.k8s.io
              kind: ValidatingWebhookConfiguration
              version: v1
        io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList:
          description: ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
          type: object
          required:
            - items
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            items:
              description: List of ValidatingWebhookConfiguration.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          x-kubernetes-group-version-kind:
            - group: admissionregistration.k8s.io
              kind: ValidatingWebhookConfigurationList
              version: v1
        io.k8s.api.admissionregistration.v1.WebhookClientConfig:
          description: WebhookClientConfig contains the information to make a TLS connection with the webhook
          type: object
          properties:
            caBundle:
              description: "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used."
              type: string
              format: byte
            service:
              $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.ServiceReference"
            url:
              description: |-
                `url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.

                The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.

                Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.

                The scheme must be "https"; the URL must begin with "https://".

                A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.

                Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
              type: string
        io.k8s.api.admissionregistration.v1.ServiceReference:
          description: ServiceReference holds a reference to Service.legacy.k8s.io
          type: object
          required:
            - namespace
            - name
          properties:
            name:
              description: "`name` is the name of the service. Required"
              type: string
            namespace:
              description: "`namespace` is the namespace of the service. Required"
              type: string
            path:
              description: "`path` is an optional URL path which will be sent in any request to this service."
              type: string
            port:
              description: If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
              type: integer
              format: int32
        io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector:
          description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
          type: object
          properties:
            matchExpressions:
              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
              type: array
              items:
                $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
            matchLabels:
              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
              type: object
              additionalProperties:
                type: string
          x-kubernetes-map-type: atomic
        io.k8s.api.admissionregistration.v1.RuleWithOperations:
          description: RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
          type: object
          properties:
            apiGroups:
              description: APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
              type: array
              items:
                type: string
              x-kubernetes-list-type: atomic
            apiVersions:
              description: APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
              type: array
              items:
                type: string
              x-kubernetes-list-type: atomic
            operations:
              description: Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.
              type: array
              items:
                type: string
              x-kubernetes-list-type: atomic
            resources:
              description: |-
                Resources is a list of resources this rule applies to.

                For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.

                If wildcard is present, the validation rule will ensure resources do not overlap with each other.

                Depending on the enclosing object, subresources might not be allowed. Required.
              type: array
              items:
                type: string
              x-kubernetes-list-type: atomic
            scope:
              description: scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
              type: string
        io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement:
          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
          type: object
          required:
            - key
            - operator
          properties:
            key:
              description: key is the label key that the selector applies to.
              type: string
              x-kubernetes-patch-merge-key: key
              x-kubernetes-patch-strategy: merge
            operator:
              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
              type: string
            values:
              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
              type: array
              items:
                type: string
      parameters: {}
      securitySchemes:
        BearerToken:
          type: http
          scheme: bearer
          bearerFormat: JWT
  github-openapi.yaml: |
    openapi: 3.0.3
    info:
      version: 1.1.4
      title: GitHub v3 REST API
      description: |-
        |
        GitHub's v3 REST API.
      license:
        name: MIT
        url: https://spdx.org/licenses/MIT
      termsOfService: https://docs.github.com/articles/github-terms-of-service
      contact:
        name: Support
        url: https://support.github.com/contact?tags=dotcom-rest-api
      x-github-plan: api.github.com
    servers:
      - url: https://api.github.com/
    security:
      - BearerToken: []
    paths:
      /repos/{owner}/{repo}/actions/workflows:
        get:
          summary: List repository workflows
          description: |
            Lists the workflows in a repository.


            Anyone with read access to the repository can use this endpoint.


            OAuth app tokens and personal access tokens (classic) need the `repo` scope
            to use this endpoint with a private repository.
          tags:
            - actions
          operationId: actions/list-repo-workflows
          externalDocs:
            description: API method documentation
            url: https://docs.github.com/rest/actions/workflows#list-repository-workflows
          parameters:
            - $ref: "#/components/parameters/owner"
            - $ref: "#/components/parameters/repo"
            - $ref: "#/components/parameters/per-page"
            - $ref: "#/components/parameters/page"
          responses:
            "200":
              description: Response
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - total_count
                      - workflows
                    properties:
                      total_count:
                        type: integer
                      workflows:
                        type: array
                        items:
                          $ref: "#/components/schemas/workflow"
              headers:
                Link:
                  $ref: "#/components/headers/link"
          x-github:
            githubCloudOnly: false
            enabledForGitHubApps: true
            category: actions
            subcategory: workflows
      /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs:
        get:
          summary: List workflow runs for a workflow
          description: |
            "List all workflow runs for a workflow. You can replace `workflow_id`
            with the workflow file name. For example, you could use `main.yaml`. You can
            use parameters to narrow the list of results. For more information about using
            parameters, see [Parameters](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#parameters).


            Anyone with read access to the repository can use this endpoint


            OAuth app tokens and personal access tokens (classic) need the `repo` scope
            to use this endpoint with a private repository."
          tags:
            - actions
          operationId: actions/list-workflow-runs
          externalDocs:
            description: API method documentation
            url: https://docs.github.com/rest/actions/workflow-runs#list-workflow-runs-for-a-workflow
          parameters:
            - $ref: "#/components/parameters/owner"
            - $ref: "#/components/parameters/repo"
            - $ref: "#/components/parameters/workflow-id"
            - $ref: "#/components/parameters/actor"
            - $ref: "#/components/parameters/workflow-run-branch"
            - $ref: "#/components/parameters/event"
            - $ref: "#/components/parameters/workflow-run-status"
            - $ref: "#/components/parameters/per-page"
            - $ref: "#/components/parameters/page"
            - $ref: "#/components/parameters/created"
            - $ref: "#/components/parameters/exclude-pull-requests"
            - $ref: "#/components/parameters/workflow-run-check-suite-id"
            - $ref: "#/components/parameters/workflow-run-head-sha"
          responses:
            "200":
              description: Response
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - total_count
                      - workflow_runs
                    properties:
                      total_count:
                        type: integer
                      workflow_runs:
                        type: array
                        items:
                          $ref: "#/components/schemas/workflow-run"
              headers:
                Link:
                  $ref: "#/components/headers/link"
          x-github:
            githubCloudOnly: false
            enabledForGitHubApps: true
            category: actions
            subcategory: workflow-runs
    components:
      schemas:
        pull-request-minimal:
          title: Pull Request Minimal
          type: object
          properties:
            id:
              type: integer
              format: int64
            number:
              type: integer
            url:
              type: string
            head:
              type: object
              properties:
                ref:
                  type: string
                sha:
                  type: string
                repo:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    url:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - url
                    - name
              required:
                - ref
                - sha
                - repo
            base:
              type: object
              properties:
                ref:
                  type: string
                sha:
                  type: string
                repo:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    url:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - url
                    - name
              required:
                - ref
                - sha
                - repo
          required:
            - id
            - number
            - url
            - head
            - base
        nullable-simple-commit:
          title: Simple Commit
          description: A commit.
          type: object
          properties:
            id:
              type: string
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
            tree_id:
              type: string
              description: SHA for the commit's tree
            message:
              description: Message describing the purpose of the commit
              example: "Fix #42"
              type: string
            timestamp:
              description: Timestamp of the commit
              example: "2014-08-09T08:02:04+12:00"
              format: date-time
              type: string
            author:
              type: object
              description: Information about the Git author
              properties:
                name:
                  description: Name of the commit's author
                  example: Monalisa Octocat
                  type: string
                email:
                  description: Git email address of the commit's author
                  example: monalisa.octocat@example.com
                  type: string
                  format: email
              required:
                - name
                - email
              nullable: true
            committer:
              type: object
              description: Information about the Git committer
              properties:
                name:
                  description: Name of the commit's committer
                  example: Monalisa Octocat
                  type: string
                email:
                  description: Git email address of the commit's committer
                  example: monalisa.octocat@example.com
                  type: string
                  format: email
              required:
                - name
                - email
              nullable: true
          required:
            - id
            - tree_id
            - message
            - timestamp
            - author
            - committer
          nullable: true
        workflow:
          title: Workflow
          description: A GitHub Actions workflow
          type: object
          properties:
            id:
              type: integer
              example: 5
            node_id:
              type: string
              example: MDg6V29ya2Zsb3cxMg==
            name:
              type: string
              example: CI
            path:
              type: string
              example: ruby.yaml
            state:
              type: string
              example: active
              enum:
                - active
                - deleted
                - disabled_fork
                - disabled_inactivity
                - disabled_manually
            created_at:
              type: string
              format: date-time
              example: "2019-12-06T14:20:20.000Z"
            updated_at:
              type: string
              format: date-time
              example: "2019-12-06T14:20:20.000Z"
            url:
              type: string
              example: https://api.github.com/repos/actions/setup-ruby/workflows/5
            html_url:
              type: string
              example: https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml
            badge_url:
              type: string
              example: https://github.com/actions/setup-ruby/workflows/CI/badge.svg
            deleted_at:
              type: string
              format: date-time
              example: "2019-12-06T14:20:20.000Z"
          required:
            - id
            - node_id
            - name
            - path
            - state
            - url
            - html_url
            - badge_url
            - created_at
            - updated_at
        simple-user:
          title: Simple User
          description: A GitHub user.
          type: object
          properties:
            name:
              nullable: true
              type: string
            email:
              nullable: true
              type: string
            login:
              type: string
              example: octocat
            id:
              type: integer
              format: int64
              example: 1
            node_id:
              type: string
              example: MDQ6VXNlcjE=
            avatar_url:
              type: string
              format: uri
              example: https://github.com/images/error/octocat_happy.gif
            gravatar_id:
              type: string
              example: 41d064eb2195891e12d0413f63227ea7
              nullable: true
            url:
              type: string
              format: uri
              example: https://api.github.com/users/octocat
            html_url:
              type: string
              format: uri
              example: https://github.com/octocat
            followers_url:
              type: string
              format: uri
              example: https://api.github.com/users/octocat/followers
            following_url:
              type: string
              example: https://api.github.com/users/octocat/following{/other_user}
            gists_url:
              type: string
              example: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url:
              type: string
              example: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url:
              type: string
              format: uri
              example: https://api.github.com/users/octocat/subscriptions
            organizations_url:
              type: string
              format: uri
              example: https://api.github.com/users/octocat/orgs
            repos_url:
              type: string
              format: uri
              example: https://api.github.com/users/octocat/repos
            events_url:
              type: string
              example: https://api.github.com/users/octocat/events{/privacy}
            received_events_url:
              type: string
              format: uri
              example: https://api.github.com/users/octocat/received_events
            type:
              type: string
              example: User
            site_admin:
              type: boolean
            starred_at:
              type: string
              example: '"2020-07-09T00:17:55Z"'
          required:
            - avatar_url
            - events_url
            - followers_url
            - following_url
            - gists_url
            - gravatar_id
            - html_url
            - id
            - node_id
            - login
            - organizations_url
            - received_events_url
            - repos_url
            - site_admin
            - starred_url
            - subscriptions_url
            - type
            - url
        workflow-run:
          title: Workflow Run
          description: An invocation of a workflow
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: The ID of the workflow run.
              example: 5
            name:
              type: string
              description: The name of the workflow run.
              nullable: true
              example: Build
            node_id:
              type: string
              example: MDEwOkNoZWNrU3VpdGU1
            check_suite_id:
              type: integer
              format: int64
              description: The ID of the associated check suite.
              example: 42
            check_suite_node_id:
              type: string
              description: The node ID of the associated check suite.
              example: MDEwOkNoZWNrU3VpdGU0Mg==
            head_branch:
              type: string
              nullable: true
              example: master
            head_sha:
              description: |
                The SHA of the head commit that points to the version of the
                workflow being run.
              example: "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"
              type: string
            path:
              description: The full path of the workflow
              example: octocat/octo-repo/.github/workflows/ci.yml@main
              type: string
            run_number:
              type: integer
              description: The auto incrementing run number for the workflow run.
              example: 106
            run_attempt:
              type: integer
              description: |
                Attempt number of the run, 1 for first attempt and higher if
                the workflow was re-run.
              example: 1
            referenced_workflows:
              type: array
              nullable: true
              items:
                "$ref": "#/components/schemas/referenced-workflow"
            event:
              type: string
              example: push
            status:
              type: string
              nullable: true
              example: completed
            conclusion:
              type: string
              nullable: true
              example: neutral
            workflow_id:
              type: integer
              description: The ID of the parent workflow.
              example: 5
            url:
              type: string
              description: The URL to the workflow run.
              example: https://api.github.com/repos/github/hello-world/actions/runs/5
            html_url:
              type: string
              example: https://github.com/github/hello-world/suites/4
            pull_requests:
              description: Pull requests that are open with a `head_sha` or `head_branch` that matches the workflow run. The returned pull requests do not necessarily indicate pull requests that triggered the run.
              type: array
              nullable: true
              items:
                "$ref": "#/components/schemas/pull-request-minimal"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            actor:
              "$ref": "#/components/schemas/simple-user"
            triggering_actor:
              "$ref": "#/components/schemas/simple-user"
            run_started_at:
              type: string
              format: date-time
              description: The start time of the latest run. Resets on re-run.
            jobs_url:
              description: The URL to the jobs for the workflow run.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
            logs_url:
              description: The URL to download the logs for the workflow run.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/runs/5/logs
            check_suite_url:
              description: The URL to the associated check suite.
              type: string
              example: https://api.github.com/repos/github/hello-world/check-suites/12
            artifacts_url:
              description: The URL to the artifacts for the workflow run.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
            cancel_url:
              description: The URL to cancel the workflow run.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
            rerun_url:
              description: The URL to rerun the workflow run.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
            previous_attempt_url:
              nullable: true
              description: The URL to the previous attempted run of this workflow, if one exists.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
            workflow_url:
              description: The URL to the workflow.
              type: string
              example: https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
            head_commit:
              "$ref": "#/components/schemas/nullable-simple-commit"
            repository:
              "$ref": "#/components/schemas/minimal-repository"
            head_repository:
              "$ref": "#/components/schemas/minimal-repository"
            head_repository_id:
              type: integer
              example: 5
            display_title:
              type: string
              example: Simple Workflow
              description: |
                The event-specific title associated with the run or the run-name
                if set, or the value of `run-name` if it is set in the workflow.
          required:
            - id
            - node_id
            - head_branch
            - run_number
            - display_title
            - event
            - status
            - conclusion
            - head_sha
            - path
            - workflow_id
            - url
            - html_url
            - created_at
            - updated_at
            - head_commit
            - head_repository
            - repository
            - jobs_url
            - logs_url
            - check_suite_url
            - cancel_url
            - rerun_url
            - artifacts_url
            - workflow_url
            - pull_requests
        referenced-workflow:
          title: Referenced workflow
          description: A workflow referenced/reused by the initial caller workflow
          type: object
          properties:
            path:
              type: string
            sha:
              type: string
            ref:
              type: string
          required:
            - path
            - sha
        minimal-repository:
          title: Minimal Repository
          description: Minimal Repository
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1296269
            node_id:
              type: string
              example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name:
              type: string
              example: Hello-World
            full_name:
              type: string
              example: octocat/Hello-World
            owner:
              "$ref": "#/components/schemas/simple-user"
            private:
              type: boolean
            html_url:
              type: string
              format: uri
              example: https://github.com/octocat/Hello-World
            description:
              type: string
              example: This your first repo!
              nullable: true
            fork:
              type: boolean
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World
            archive_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/downloads
            events_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/events
            forks_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url:
              type: string
            issue_comment_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/languages
            merges_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/merges
            milestones_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url:
              type: string
            stargazers_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/subscription
            tags_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/tags
            teams_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/teams
            trees_url:
              type: string
              example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url:
              type: string
            mirror_url:
              type: string
              nullable: true
            hooks_url:
              type: string
              format: uri
              example: http://api.github.com/repos/octocat/Hello-World/hooks
            svn_url:
              type: string
            homepage:
              type: string
              nullable: true
            language:
              type: string
              nullable: true
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            has_discussions:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
              format: date-time
              example: "2011-01-26T19:06:43Z"
              nullable: true
            created_at:
              type: string
              format: date-time
              example: "2011-01-26T19:01:12Z"
              nullable: true
            updated_at:
              type: string
              format: date-time
              example: "2011-01-26T19:14:43Z"
              nullable: true
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            role_name:
              type: string
              example: admin
            temp_clone_token:
              type: string
            delete_branch_on_merge:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
            code_of_conduct:
              "$ref": "#/components/schemas/code-of-conduct"
            license:
              type: object
              properties:
                key:
                  type: string
                name:
                  type: string
                spdx_id:
                  type: string
                url:
                  type: string
                node_id:
                  type: string
              nullable: true
            forks:
              type: integer
              example: 0
            open_issues:
              type: integer
              example: 0
            watchers:
              type: integer
              example: 0
            allow_forking:
              type: boolean
            web_commit_signoff_required:
              type: boolean
              example: false
            security_and_analysis:
              "$ref": "#/components/schemas/security-and-analysis"
          required:
            - archive_url
            - assignees_url
            - blobs_url
            - branches_url
            - collaborators_url
            - comments_url
            - commits_url
            - compare_url
            - contents_url
            - contributors_url
            - deployments_url
            - description
            - downloads_url
            - events_url
            - fork
            - forks_url
            - full_name
            - git_commits_url
            - git_refs_url
            - git_tags_url
            - hooks_url
            - html_url
            - id
            - node_id
            - issue_comment_url
            - issue_events_url
            - issues_url
            - keys_url
            - labels_url
            - languages_url
            - merges_url
            - milestones_url
            - name
            - notifications_url
            - owner
            - private
            - pulls_url
            - releases_url
            - stargazers_url
            - statuses_url
            - subscribers_url
            - subscription_url
            - tags_url
            - teams_url
            - trees_url
            - url
        security-and-analysis:
          nullable: true
          type: object
          properties:
            advanced_security:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - enabled
                    - disabled
            dependabot_security_updates:
              description: Enable or disable Dependabot security updates for the repository.
              type: object
              properties:
                status:
                  description: The enablement status of Dependabot security updates for the repository.
                  type: string
                  enum:
                    - enabled
                    - disabled
            secret_scanning:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - enabled
                    - disabled
            secret_scanning_push_protection:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - enabled
                    - disabled
            secret_scanning_non_provider_patterns:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - enabled
                    - disabled
        code-of-conduct:
          title: Code Of Conduct
          description: Code Of Conduct
          type: object
          properties:
            key:
              type: string
              example: contributor_covenant
            name:
              type: string
              example: Contributor Covenant
            url:
              type: string
              format: uri
              example: https://api.github.com/codes_of_conduct/contributor_covenant
            body:
              type: string
              example: |
                # Contributor Covenant Code of Conduct

                ## Our Pledge

                In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

                ## Our Standards

                Examples of behavior that contributes to creating a positive environment include:

                * Using welcoming and inclusive language
                * Being respectful of differing viewpoints and experiences
                * Gracefully accepting constructive criticism
                * Focusing on what is best for the community
                * Showing empathy towards other community members

                Examples of unacceptable behavior by participants include:

                * The use of sexualized language or imagery and unwelcome sexual attention or advances
                * Trolling, insulting/derogatory comments, and personal or political attacks
                * Public or private harassment
                * Publishing others' private information, such as a physical or electronic address, without explicit permission
                * Other conduct which could reasonably be considered inappropriate in a professional setting

                ## Our Responsibilities

                Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                                  to any instances of unacceptable behavior.

                Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

                ## Scope

                This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

                ## Enforcement

                Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

                Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

                ## Attribution

                This Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).
            html_url:
              type: string
              format: uri
              nullable: true
          required:
            - url
            - html_url
            - key
            - name
      parameters:
        owner:
          name: owner
          description: The account owner of the repository. The name is not case sensitive.
          in: path
          required: true
          schema:
            type: string
        repo:
          name: repo
          description: The name of the repository without the `.git` extension. The name is not case sensitive.
          in: path
          required: true
          schema:
            type: string
        per-page:
          name: per_page
          description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
          in: query
          schema:
            type: integer
            default: 30
        page:
          name: page
          description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
          in: query
          schema:
            type: integer
            default: 1
        workflow-id:
          name: workflow_id
          in: path
          description: The ID of the workflow.
          required: true
          schema:
            type: integer
        actor:
          name: actor
          description: Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.
          in: query
          required: false
          schema:
            type: string
        workflow-run-branch:
          name: branch
          description: Returns workflow runs associated with a branch. Use the name of the branch of the `push`.
          in: query
          required: false
          schema:
            type: string
        event:
          name: event
          description: Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see "[Events that trigger workflows](https://docs.github.com/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
          in: query
          required: false
          schema:
            type: string
        workflow-run-status:
          name: status
          description: Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub Actions can set a status of `waiting`, `pending`, or `requested`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - completed
              - action_required
              - cancelled
              - failure
              - neutral
              - skipped
              - stale
              - success
              - timed_out
              - in_progress
              - queued
              - requested
              - waiting
              - pending
        created:
          name: created
          description: Returns workflow runs created within the given date-time range. For more information on the syntax, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
          in: query
          required: false
          schema:
            type: string
            format: date-time
        exclude-pull-requests:
          name: exclude_pull_requests
          description: If `true` pull requests are omitted from the response (empty array).
          in: query
          required: false
          schema:
            type: boolean
            default: false
        workflow-run-check-suite-id:
          name: check_suite_id
          description: Returns workflow runs with the `check_suite_id` that you specify.
          in: query
          schema:
            type: integer
            format: int64
        workflow-run-head-sha:
          name: head_sha
          description: Only returns workflow runs that are associated with the specified `head_sha`.
          in: query
          required: false
          schema:
            type: string
      headers:
        link:
          example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
          schema:
            type: string
        content-type:
          example: text/html
          schema:
            type: string
        x-common-marker-version:
          example: 0.17.4
          schema:
            type: string
        x-rate-limit-limit:
          example: 5000
          schema:
            type: integer
        x-rate-limit-remaining:
          example: 4999
          schema:
            type: integer
        x-rate-limit-reset:
          example: 1590701888
          schema:
            type: integer
            format: timestamp
        location:
          example: https://pipelines.actions.githubusercontent.com/OhgS4QRKqmgx7bKC27GKU83jnQjyeqG8oIMTge8eqtheppcmw8/_apis/pipelines/1/runs/176/signedlogcontent?urlExpires=2020-01-24T18%3A10%3A31.5729946Z&urlSigningMethod=HMACV1&urlSignature=agG73JakPYkHrh06seAkvmH7rBR4Ji4c2%2B6a2ejYh3E%3D
          schema:
            type: string
      securitySchemes:
        BearerToken:
          type: http
          scheme: bearer
  ocp-openapi.yaml: "openapi: 3.0.1\ninfo:\n  title: Kubernetes\n  version: v1.29.6+aba1e8d\nservers:\n
    \ - url: /\nsecurity:\n  - BearerToken: []\npaths:\n  /apis/project.openshift.io/v1/projectrequests:\n
    \   post:\n      tags:\n        - project_openshift_io_v1\n      description:
    create a ProjectRequest\n      operationId: createProjectRequestOpenshiftIoV1Project\n
    \     parameters:\n        - name: dryRun\n          in: query\n          description:
    \"When present, indicates that modifications should not be persisted. An invalid
    or unrecognized dryRun directive will result in an error response and no further
    processing of the request. Valid values are: - All: all dry run stages will be
    processed\"\n          schema:\n            type: string\n        - name: fieldManager\n
    \         in: query\n          description: \"fieldManager is a name associated
    with the actor or entity that is making these changes. The value must be less
    than or 128 characters long, and only contain printable characters, as defined
    by https://golang.org/pkg/unicode/#IsPrint.\"\n          schema:\n            type:
    string\n        - name: fieldValidation\n          in: query\n          description:
    \"fieldValidation instructs the server on how to handle objects in the request
    (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore:
    This will ignore any unknown fields that are silently dropped from the object,
    and will ignore all but the last duplicate field that the decoder encounters.
    This is the default behavior prior to v1.23. - Warn: This will send a warning
    via the standard warning response header for each unknown field that is dropped
    from the object, and for each duplicate field that is encountered. The request
    will still succeed if there are no other errors, and will only persist the last
    of any duplicate fields. This is the default in v1.23+ - Strict: This will fail
    the request with a BadRequest error if any unknown fields would be dropped from
    the object, or if any duplicate fields are present. The error returned from the
    server will contain all unknown and duplicate fields encountered.\"\n          schema:\n
    \           type: string\n        - name: pretty\n          in: query\n          description:
    \"If 'true', then the output is pretty printed.\"\n          schema:\n            type:
    string\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n
    \             $ref: \"#/components/schemas/io.openshift.api.project.v1.ProjectRequest\"\n
    \       required: true\n      responses:\n        \"200\":\n          description:
    OK\n          content:\n            application/json:\n              schema:\n
    \               $ref: \"#/components/schemas/io.openshift.api.project.v1.Project\"\n
    \       \"201\":\n          description: Created\n          content:\n            application/json:\n
    \             schema:\n                $ref: \"#/components/schemas/io.openshift.api.project.v1.Project\"\n
    \       \"202\":\n          description: Accepted\n          content:\n            application/json:\n
    \             schema:\n                $ref: \"#/components/schemas/io.openshift.api.project.v1.Project\"\n
    \       \"401\":\n          description: Unauthorized\n          content: {}\n
    \     x-kubernetes-action: post\n      x-kubernetes-group-version-kind:\n        group:
    project.openshift.io\n        kind: Project\n        version: v1\n      x-codegen-request-body-name:
    body\n      security:\n        - BearerToken: []\n  /apis/project.openshift.io/v1/projects/{name}:\n
    \   get:\n      tags:\n        - project_openshift_io_v1\n      description: read
    the specified Project\n      operationId: readProjectOpenshiftIoV1Project\n      parameters:\n
    \       - name: name\n          in: path\n          description: name of the Project\n
    \         required: true\n          schema:\n            type: string\n        -
    name: pretty\n          in: query\n          description: \"If 'true', then the
    output is pretty printed.\"\n          schema:\n            type: string\n      responses:\n
    \       \"200\":\n          description: OK\n          content:\n            application/json:\n
    \             schema:\n                $ref: \"#/components/schemas/io.openshift.api.project.v1.Project\"\n
    \       \"401\":\n          description: Unauthorized\n          content: {}\n
    \     x-kubernetes-action: get\n      x-kubernetes-group-version-kind:\n        group:
    project.openshift.io\n        kind: Project\n        version: v1\n      security:\n
    \       - BearerToken: []\n  /api/v1/namespaces/{name}:\n    patch:\n      tags:\n
    \       - core_v1\n      description: patch the specified Namespace\n      operationId:
    patchCoreV1Namespace\n      parameters:\n        - name: name\n          in: path\n
    \         description: name of the Namespace\n          required: true\n          schema:\n
    \           type: string\n        - name: pretty\n          in: query\n          description:
    \"If 'true', then the output is pretty printed.\"\n          schema:\n            type:
    string\n        - name: dryRun\n          in: query\n          description: \"When
    present, indicates that modifications should not be persisted. An invalid or unrecognized
    dryRun directive will result in an error response and no further processing of
    the request. Valid values are: - All: all dry run stages will be processed\"\n
    \         schema:\n            type: string\n        - name: fieldManager\n          in:
    query\n          description: \"fieldManager is a name associated with the actor
    or entity that is making these changes. The value must be less than or 128 characters
    long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\"\n
    \         schema:\n            type: string\n        - name: fieldValidation\n
    \         in: query\n          description: \"fieldValidation instructs the server
    on how to handle objects in the request (POST/PUT/PATCH) containing unknown or
    duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields
    that are silently dropped from the object, and will ignore all but the last duplicate
    field that the decoder encounters. This is the default behavior prior to v1.23.
    - Warn: This will send a warning via the standard warning response header for
    each unknown field that is dropped from the object, and for each duplicate field
    that is encountered. The request will still succeed if there are no other errors,
    and will only persist the last of any duplicate fields. This is the default in
    v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown
    fields would be dropped from the object, or if any duplicate fields are present.
    The error returned from the server will contain all unknown and duplicate fields
    encountered.\"\n          schema:\n            type: string\n        - name: force\n
    \         in: query\n          description: \"Force is going to \\\"force\\\"
    Apply requests. It means user will re-acquire fields owned by other people. Force
    flag must be unset for non-apply patch requests.\"\n          schema:\n            type:
    boolean\n      requestBody:\n        content:\n          \"application/merge-patch+json\":\n
    \           schema:\n              $ref: \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch\"\n
    \       required: true\n      responses:\n        \"200\":\n          description:
    OK\n          content:\n            application/json:\n              schema:\n
    \               $ref: \"#/components/schemas/io.k8s.api.core.v1.Namespace\"\n
    \       \"201\":\n          description: Created\n          content:\n            application/json:\n
    \             schema:\n                $ref: \"#/components/schemas/io.k8s.api.core.v1.Namespace\"\n
    \       \"401\":\n          description: Unauthorized\n          content: {}\n
    \     x-kubernetes-action: patch\n      x-kubernetes-group-version-kind:\n        group:
    \"\"\n        kind: Namespace\n        version: v1\n      x-codegen-request-body-name:
    body\n      security:\n        - BearerToken: []\ncomponents:\n  schemas:\n    io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:\n
    \     type: object\n      properties:\n        annotations:\n          type: object\n
    \         additionalProperties:\n            type: string\n        labels:\n          type:
    object\n          additionalProperties:\n            type: string\n        name:\n
    \         type: string\n        namespace:\n          type: string\n    io.k8s.apimachinery.pkg.apis.meta.v1.Patch:\n
    \     type: object\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n
    \   io.k8s.api.core.v1.Namespace:\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n        kind:\n          type: string\n        metadata:\n
    \         $ref: \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n
    \       spec:\n          $ref: \"#/components/schemas/io.k8s.api.core.v1.NamespaceSpec\"\n
    \       status:\n          $ref: \"#/components/schemas/io.k8s.api.core.v1.NamespaceStatus\"\n
    \   io.k8s.api.core.v1.NamespaceSpec:\n      type: object\n      properties:\n
    \       finalizers:\n          type: array\n          items:\n            type:
    string\n    io.k8s.api.core.v1.NamespaceStatus:\n      type: object\n      properties:\n
    \       conditions:\n          type: array\n          items:\n            $ref:
    \"#/components/schemas/io.k8s.api.core.v1.NamespaceCondition\"\n        phase:\n
    \         type: string\n    io.k8s.api.core.v1.NamespaceCondition:\n      type:
    object\n      properties:\n        lastTransitionTime:\n          type: string\n
    \         format: date-time\n        message:\n          type: string\n        reason:\n
    \         type: string\n        status:\n          type: string\n        type:\n
    \         type: string\n      required:\n        - type\n        - status\n    io.openshift.api.project.v1.ProjectRequest:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \       kind:\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n
    \       description:\n          type: string\n        displayName:\n          type:
    string\n        spec:\n          $ref: \"#/components/schemas/io.openshift.api.project.v1.ProjectSpec\"\n
    \   io.openshift.api.project.v1.Project:\n      type: object\n      properties:\n
    \       apiVersion:\n          type: string\n        kind:\n          type: string\n
    \       metadata:\n          $ref: \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n
    \       spec:\n          $ref: \"#/components/schemas/io.openshift.api.project.v1.ProjectSpec\"\n
    \       status:\n          $ref: \"#/components/schemas/io.openshift.api.project.v1.ProjectStatus\"\n
    \   io.openshift.api.project.v1.ProjectSpec:\n      type: object\n      properties:\n
    \       finalizers:\n          type: array\n          items:\n            type:
    string\n    io.openshift.api.project.v1.ProjectStatus:\n      type: object\n      properties:\n
    \       phase:\n          type: string\n  securitySchemes:\n    BearerToken:\n
    \     type: http\n      scheme: bearer\n      bearerFormat: JWT "
  scaffolder-openapi.yaml: |
    openapi: 3.0.3
    info:
      title: Scaffolder API
      version: 1.0.0
      description: API for managing scaffolding tasks and templates.
    servers:
      - url: /
    security:
      - BearerToken: []

    paths:
      /api/scaffolder/v2/templates/{namespace}/{kind}/{name}/parameter-schema:
        get:
          summary: Get Template Parameter Schema
          operationId: getTemplateParameterSchema
          security:
            - bearerAuth: []
          parameters:
            - name: namespace
              in: path
              required: true
              schema:
                type: string
            - name: kind
              in: path
              required: true
              schema:
                type: string
            - name: name
              in: path
              required: true
              schema:
                type: string
          responses:
            "200":
              description: Template parameter schema returned successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Template"
            "404":
              description: Template not found
            "500":
              description: Internal server error

      /api/scaffolder/v2/actions:
        get:
          summary: List Available Actions
          operationId: listAvailableActions
          security:
            - bearerAuth: []
          responses:
            "200":
              description: List of available actions
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        description:
                          type: string
                          description: A brief explanation of the action, its purpose, and how it is used.
                        examples:
                          type: array
                          items:
                            type: object
                        schema:
                          type: object
            "500":
              description: Internal server error

      /api/scaffolder/v2/tasks:
        post:
          summary: Create a New Task
          operationId: createTask
          security:
            - bearerAuth: []
          requestBody:
            description: Task creation parameters
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Task"
          responses:
            "201":
              description: Task created successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      id:
                        type: string
            "400":
              description: Bad request
            "500":
              description: Internal server error

        get:
          summary: List Tasks
          operationId: listTasks
          security:
            - bearerAuth: []
          parameters:
            - name: createdBy
              in: query
              schema:
                type: string
            - name: status
              in: query
              schema:
                type: string
          responses:
            "200":
              description: List of tasks
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
            "400":
              description: Bad request
            "500":
              description: Internal server error

      /api/scaffolder/v2/tasks/{taskId}:
        get:
          summary: Get Task Details
          operationId: getTaskDetails
          security:
            - bearerAuth: []
          parameters:
            - name: taskId
              in: path
              required: true
              schema:
                type: string
          responses:
            "200":
              description: Task details retrieved successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Task"
            "404":
              description: Task not found
            "500":
              description: Internal server error

        patch:
          summary: Update Task
          operationId: updateTask
          security:
            - bearerAuth: []
          parameters:
            - name: taskId
              in: path
              required: true
              schema:
                type: string
          requestBody:
            description: Task update parameters
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Task"
          responses:
            "200":
              description: Task updated successfully
            "400":
              description: Bad request
            "404":
              description: Task not found
            "500":
              description: Internal server error

        delete:
          summary: Delete Task
          operationId: deleteTask
          security:
            - bearerAuth: []
          parameters:
            - name: taskId
              in: path
              required: true
              schema:
                type: string
          responses:
            "204":
              description: Task deleted successfully
            "404":
              description: Task not found
            "500":
              description: Internal server error

    components:
      schemas:
        Template:
          type: object
          properties:
            title:
              type: string
              description: The title of the template, summarizing its purpose.
            description:
              type: string
              description: A detailed explanation of what the template does, its intended use case, and any special considerations.
            steps:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                    description: The title of the step, indicating its role in the template.
                  description:
                    type: string
                    description: A description of what the step accomplishes and any relevant details for its execution.
                  schema:
                    type: object
                    description: The schema that defines the parameters and data structure required for the step.

        Task:
          type: object
          properties:
            id:
              type: string
              description: A unique identifier for the task.
            status:
              type: string
              description: The current status of the task (e.g., pending, in progress, completed).
            createdBy:
              type: string
              description: The identifier of the user or system that created the task.
            templateRef:
              type: string
              description: A reference to the template used to create the task.
            values:
              type: object
              description: The specific values provided when the task was created, based on the template's schema.
            secrets:
              type: object
              description: Sensitive data associated with the task, such as API keys or credentials, handled securely.
            logs:
              type: array
              items:
                type: string
              description: A collection of log entries related to the task's execution, useful for debugging or auditing.

      securitySchemes:
        BearerToken:
          type: http
          scheme: bearer
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: 02-aap-db-deploy-main-resources-specs
