name: Build and Deploy Workflow

on:
  push:
    branches:
      - podman
  workflow_dispatch:

env:
  WORKFLOW_IMAGE_REGISTRY: ghcr.io
  WORKFLOW_IMAGE_NAMESPACE: ${{ github.repository_owner }}
  TARGET_NS: ${{ secrets.TARGET_NAMESPACE }}
  MANIFESTS_DIR: manifests/${{ github.sha }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-workflow:
    name: Building the Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Workflow ID and Folder Name
        run: |
          echo "WORKFLOW_ID=$(basename $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "WORKFLOW_FOLDER=$(basename $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ env.WORKFLOW_IMAGE_REGISTRY }}/${{ env.WORKFLOW_IMAGE_NAMESPACE }}/demo-$(basename $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Validate Required Variables
        run: |
          if [[ -z "${WORKFLOW_ID}" || -z "${WORKFLOW_FOLDER}" || -z "${WORKFLOW_IMAGE_REGISTRY}" || -z "${WORKFLOW_IMAGE_NAMESPACE}" ]]; then
            echo "::error:: Missing required environment variables."
            exit 1
          fi

      - name: Install Podman
        run: |
          sudo apt update
          sudo apt install -y podman

      - name: Move Resources for Build
        run: |
          mv ${WORKFLOW_FOLDER}/src/main/resources ${WORKFLOW_FOLDER}/.

      - name: Log in to GitHub Container Registry (GHCR)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Image to GHCR
        run: |
          podman build -f resources/workflow-builder.Dockerfile \
            --build-arg WF_RESOURCES=${WORKFLOW_FOLDER} \
            --ulimit nofile=4096:4096 \
            --tag ${IMAGE_NAME}:${IMAGE_TAG} \
            --tag ${IMAGE_NAME}:latest .

          podman push ${IMAGE_NAME}:${IMAGE_TAG}
          podman push ${IMAGE_NAME}:latest

  generate-manifests:
    name: Generating OpenShift Manifests
    runs-on: ubuntu-latest
    needs: build-workflow

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Required CLI Tools
        run: |
          sudo apt update
          sudo apt install -y yq jq
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvzf oc.tar.gz
          sudo mv oc /usr/local/bin/
          curl -LO https://downloads.kogito.kie.org/tools/kn-workflow-cli/latest/kn-workflow-linux-amd64
          chmod +x kn-workflow-linux-amd64
          sudo mv kn-workflow-linux-amd64 /usr/local/bin/kn-workflow

      - name: Generate OpenShift Manifests
        run: |
          mkdir -p ${MANIFESTS_DIR}
          cd ${WORKFLOW_FOLDER}/src/main/resources
          echo -e "\nquarkus.flyway.migrate-at-start=true" >> application.properties
          kn-workflow gen-manifest

      - name: Update OpenShift Manifests
        run: |
          cd ${WORKFLOW_FOLDER}/src/main/resources/manifests

          find . -name '*.yaml' -exec yq --inplace '.metadata.namespace = ""' {} \;

          workflow_file=$(ls *-sonataflow-*.yaml | head -n 1)
          if [[ -z "$workflow_file" ]]; then
            echo "::error:: No SonataFlow CR found!"
            exit 1
          fi

          WORKFLOW_CR=$(yq '.metadata.name' "$workflow_file")
          if [[ -z "$WORKFLOW_CR" ]]; then
            echo "::error:: Failed to extract workflow ID from manifest!"
            exit 1
          fi

          yq --inplace eval '.metadata.annotations["sonataflow.org/profile"] = "gitops"' "$workflow_file"
          yq --inplace ".spec.podTemplate.container.image=\"${WORKFLOW_IMAGE_REGISTRY}/${WORKFLOW_IMAGE_NAMESPACE}/demo-${WORKFLOW_ID}:${IMAGE_TAG}\"" "$workflow_file"

          if test -f "secret.properties"; then
            yq --inplace ".spec.podTemplate.container.envFrom=[{\"secretRef\": { \"name\": \"${WORKFLOW_ID}-creds\"}}]" "$workflow_file"
            kubectl create secret generic "${WORKFLOW_ID}-creds" --from-env-file=secret.properties --dry-run=client -oyaml > "00-secret_${WORKFLOW_ID}.yaml"
          fi

      - name: Commit Updated Manifests to the Same Branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout ${{ github.ref_name }}
          git add ${MANIFESTS_DIR}/*
          git commit -m "Updating OpenShift manifests for workflow ${WORKFLOW_ID} [GitHub Actions]" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}

  deploy-workflow:
    name: Deploying the Workflow
    runs-on: ubuntu-latest
    needs: generate-manifests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install OpenShift CLI
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvzf oc.tar.gz
          sudo mv oc /usr/local/bin/

      - name: Log in to OpenShift
        run: |
          oc login ${{ secrets.OCP_API_URL }} --token=${{ secrets.OCP_TOKEN }} --insecure-skip-tls-verify=true

      - name: Apply OpenShift Manifests
        run: |
          oc -n ${TARGET_NS} apply -f ${MANIFESTS_DIR}/00-secret_*.yaml
          oc -n ${TARGET_NS} apply -f ${MANIFESTS_DIR}/02-configmap_*-props.yaml
          oc -n ${TARGET_NS} apply -f ${MANIFESTS_DIR}/01-sonataflow_*.yaml
