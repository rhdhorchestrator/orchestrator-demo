name: Build, Deploy and Manage Workflow

on:
  push:
    branches:
      - podman
  workflow_dispatch:

env:
  WORKFLOW_IMAGE_REGISTRY: ghcr.io
  WORKFLOW_IMAGE_NAMESPACE: ${{ github.repository_owner }}
  TARGET_NS: ${{ secrets.TARGET_NAMESPACE }}
  MANIFESTS_DIR: manifests/${{ github.sha }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-workflow:
    name: Build and Push Workflow Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug Environment Variables
        run: |
          echo "DEBUG: Checking Environment Variables..."
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
          echo "WORKFLOW_FOLDER=${{ secrets.WORKFLOW_FOLDER }}"

      - name: Validate Environment Variables
        run: |
          REQUIRED_VARS=("WORKFLOW_IMAGE_REGISTRY" "WORKFLOW_IMAGE_NAMESPACE" "GITHUB_SHA" "TARGET_NS")

          for var in "${REQUIRED_VARS[@]}"; do
            if [[ -z "${!var}" ]]; then
              echo "::error:: Missing required variable: $var"
              exit 1
            fi
          done

      - name: Extract Workflow ID and Path
        run: |
          WORKFLOW_FOLDER="${{ secrets.WORKFLOW_FOLDER }}"
          WORKFLOW_PATH="${GITHUB_WORKSPACE}/${WORKFLOW_FOLDER}"
          WORKFLOW_ID=$(basename "$WORKFLOW_FOLDER")

          echo "WORKFLOW_PATH=${WORKFLOW_PATH}" >> $GITHUB_ENV
          echo "WORKFLOW_ID=${WORKFLOW_ID}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${WORKFLOW_IMAGE_REGISTRY}/${WORKFLOW_IMAGE_NAMESPACE}/demo-${WORKFLOW_ID}" >> $GITHUB_ENV

          if [[ ! -d "$WORKFLOW_PATH" ]]; then
            echo "::error:: WORKFLOW_FOLDER '${WORKFLOW_FOLDER}' does not exist!"
            exit 1
          fi

      - name: Install Podman
        run: |
          sudo apt update
          sudo apt install -y podman

      - name: Log in to Red Hat Container Registry
        run: |
          echo "${{ secrets.REDHAT_REGISTRY_PASSWORD }}" | podman login registry.redhat.io -u ${{ secrets.REDHAT_REGISTRY_USERNAME }} --password-stdin

      - name: Log in to GitHub Container Registry (GHCR)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Image to GHCR
        run: |
          cd ${GITHUB_WORKSPACE}
          podman build -f ${WORKFLOW_PATH}/resources/workflow-builder.Dockerfile \
            --build-arg WF_RESOURCES=${WORKFLOW_PATH}/src/main/resources \
            --tag ${IMAGE_NAME}:${IMAGE_TAG} \
            --tag ${IMAGE_NAME}:latest .

          podman push ${IMAGE_NAME}:${IMAGE_TAG}
          podman push ${IMAGE_NAME}:latest

  generate-manifests:
    name: Generate OpenShift Manifests
    runs-on: ubuntu-latest
    needs: build-workflow

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Workflow Path
        run: |
          echo "Setting workflow path..."
          WORKFLOW_FOLDER="${{ secrets.WORKFLOW_FOLDER }}"
          WORKFLOW_PATH="${GITHUB_WORKSPACE}/${WORKFLOW_FOLDER}"

          echo "WORKFLOW_PATH=${WORKFLOW_PATH}" >> $GITHUB_ENV

          if [[ ! -d "$WORKFLOW_PATH/src/main/resources" ]]; then
            echo "::error:: ERROR: The expected resources directory does not exist!"
            ls -l ${WORKFLOW_PATH}
            exit 1
          fi

      - name: Install Required CLI Tools
        run: |
          sudo apt update
          sudo apt install -y yq jq
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvzf oc.tar.gz
          sudo mv oc /usr/local/bin/

      - name: Install kn-workflow CLI using Podman
        run: |
          export KN_IMAGE=registry.redhat.io/openshift-serverless-1/logic-kn-workflow-cli-artifacts-rhel8:1.33.0
          
          echo "${{ secrets.REDHAT_REGISTRY_PASSWORD }}" | podman login registry.redhat.io \
            -u ${{ secrets.REDHAT_REGISTRY_USERNAME }} --password-stdin

          podman pull $KN_IMAGE
          export KN_CONTAINER_ID=$(podman run -di $KN_IMAGE)

          KN_BINARY_PATH="/usr/share/kn/linux_amd64/kn-workflow-linux-amd64.tar.gz"
          
          if podman exec $KN_CONTAINER_ID test -f $KN_BINARY_PATH; then
            podman cp $KN_CONTAINER_ID:$KN_BINARY_PATH .
          else
            echo "::error:: ❌ ERROR: kn-workflow binary not found!"
            podman stop $KN_CONTAINER_ID
            podman rm $KN_CONTAINER_ID
            exit 1
          fi

          podman stop $KN_CONTAINER_ID
          podman rm $KN_CONTAINER_ID
          
          tar xvzf kn-workflow-linux-amd64.tar.gz

          if [[ -f "kn" ]]; then
            mv kn kn-workflow
          elif [[ -f "kn-workflow-linux-amd64" ]]; then
            mv kn-workflow-linux-amd64 kn-workflow
          else
            echo "::error:: ❌ ERROR: kn-workflow binary missing!"
            exit 1
          fi

          sudo mv kn-workflow /usr/local/bin/kn-workflow
          chmod +x /usr/local/bin/kn-workflow
          which kn-workflow
          kn-workflow version

      - name: Generate OpenShift Manifests
        run: |
          mkdir -p ${MANIFESTS_DIR}

          if [[ ! -d "${WORKFLOW_PATH}/src/main/resources" ]]; then
            echo "::error:: ❌ ERROR: Directory ${WORKFLOW_PATH}/src/main/resources does not exist!"
            exit 1
          fi

          cd ${WORKFLOW_PATH}/src/main/resources

          grep -qxF "quarkus.flyway.migrate-at-start=true" application.properties || \
          echo "quarkus.flyway.migrate-at-start=true" >> application.properties

          kn-workflow gen-manifest

      - name: Commit and Push Manifests
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout ${{ github.ref_name }}
          git add ${MANIFESTS_DIR}/*
          git commit -m "Updating OpenShift manifests for workflow ${WORKFLOW_ID} [GitHub Actions]" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}
